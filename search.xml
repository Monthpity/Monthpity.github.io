<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo-matery-小组件</title>
      <link href="/2024/01/24/hexo-matery-xiao-zu-jian/"/>
      <url>/2024/01/24/hexo-matery-xiao-zu-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-matery-小组件"><a href="#Hexo-matery-小组件" class="headerlink" title="Hexo-matery-小组件"></a>Hexo-matery-小组件</h1><h3 id="1-评论直达按钮"><a href="#1-评论直达按钮" class="headerlink" title="1. 评论直达按钮"></a>1. 评论直达按钮</h3><blockquote><p>主题本身没有这个按钮，需要自己添加。</p></blockquote><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p>在文件夹<code>themes\Matery\layout\_partial</code>中新建<code>back-comment.ejs</code>，我这里评论是valine，直接填写的valine的id——<code>href="#vcomments"</code>,如果是其他评论，对应修改即可。<code>back-comment.ejs</code>代码如下<span class="github-emoji"><span>🔧</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!-- 直达评论 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>to_comment<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comment-scroll<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-floating btn-large waves-effect waves-light<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#vcomments<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>直达评论<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-comments<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>在<code>themes\Matery\layout\_partial\valine.ejs</code><strong>文件末尾</strong>添加一条代码，引用第一步的内容。</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/back-comment.ejs'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%&gt;</span></span>   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样操作后则只在valine存在的页面才显示直达评论，防止首页其他地方也出现按钮。</p><h4 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h4><p>在<code>themes\Matery\source\css\matery.css</code><strong>文件末尾</strong>中增加以下代码<span class="github-emoji"><span>🔧</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*直达评论按钮样式*/</span><span class="token selector">.comment-scroll</span> <span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 135px<span class="token punctuation">;</span>    <span class="token property">padding-top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 998<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.comment-scroll .btn-floating</span> <span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to bottom right<span class="token punctuation">,</span> #FF9999 0%<span class="token punctuation">,</span> #ff6666 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.comment-scroll .btn-floating i</span> <span class="token punctuation">{</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.8rem<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此按钮添加成功。重新生成博客文件即可。</p><h3 id="2-滚动条样式"><a href="#2-滚动条样式" class="headerlink" title="2. 滚动条样式"></a>2. 滚动条样式</h3><p>在<code>themes\Matery\source\css\matery.css</code>文件末尾添加如下代码<span class="github-emoji"><span>🔧</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 滚动条 */</span><span class="token selector">::-webkit-scrollbar-thumb</span> <span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #2e77f7<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.4<span class="token punctuation">)</span> 25%<span class="token punctuation">,</span>transparent 25%<span class="token punctuation">,</span>transparent 50%<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.4<span class="token punctuation">)</span> 50%<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>255<span class="token punctuation">,</span>.4<span class="token punctuation">)</span> 75%<span class="token punctuation">,</span>transparent 75%<span class="token punctuation">,</span>transparent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">::-webkit-scrollbar-track</span> <span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3em<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">::-webkit-scrollbar</span> <span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以修改以下两个属性来改变颜色：</p><p><code>::-webkit-scrollbar-thumb</code>中的<code>background-color</code>参数是滚动条颜色。</p><p><code>::-webkit-scrollbar-track</code>中的<code>background-color</code>参数是滚动条处的背景颜色。</p><h3 id="3-TOC目录展开收缩小箭头"><a href="#3-TOC目录展开收缩小箭头" class="headerlink" title="3. TOC目录展开收缩小箭头"></a>3. TOC目录展开收缩小箭头</h3><p><strong>效果如下：</strong></p><p><img src="https://pic.imgdb.cn/item/65b07885871b83018a152798.png" title="Toc目录效果图"></p><p>找到主题目录下<code>/layout/_partial/post-detail-toc.ejs</code>这个文件，打开后找到如下代码：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs">// 切换TOC目录展开收缩的相关操作.   const expandedClass = 'expanded';   let $tocAside = $('#toc-aside');   let $mainContent = $('#main-content');        $('#floating-toc-btn .btn-floating').click(function () {            if ($tocAside.hasClass(expandedClass)) {                $tocAside.removeClass(expandedClass).hide();                $mainContent.removeClass('l9');            } else {                $tocAside.addClass(expandedClass).show();                $mainContent.addClass('l9');            }            fixPostCardWidth('artDetail', 'prenext-posts');        });        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> </span><span class="token delimiter punctuation">%&gt;</span></span>    });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将上面的的代码替换成下面的ejs代码即可<span class="github-emoji"><span>🔧</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs">const expandedClass = 'expanded';        let $tocAside = $('#toc-aside');        let $mainContent = $('#main-content');        $('#floating-toc-btn .btn-floating').click(function () {            if ($tocAside.hasClass(expandedClass)) {                $tocAside.removeClass(expandedClass).hide();                $mainContent.removeClass('l9');            } else {                $tocAside.addClass(expandedClass).show();                $mainContent.addClass('l9');            }            fixPostCardWidth('artDetail', 'prenext-posts');        });        let $itemHasChild = $(".toc-list-item:has(&gt; .toc-list)");        $itemHasChild.prepend("<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>fa fa-caret-down<span class="token punctuation">'</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>fa fa-caret-right<span class="token punctuation">'</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>");        let $iconToFold = $(".toc-list-item &gt; .fa-caret-down");        let $iconToExpand = $(".toc-list-item &gt; .fa-caret-right");        $iconToFold.addClass("hide");        const targetNodes = document.getElementsByClassName("toc-list-item");        const config = { attributes: true, childList: false, subtree: false };        const callback = function(mutationsList, observer) {          for(let mutation of mutationsList) {            if (mutation.type === "attributes") {              let target = $(mutation.target)              if (target.hasClass("is-active-li")) {                let $toFold = $(".toc-list-item &gt; .fa-caret-down");                let $toExpand = $(".toc-list-item &gt; .fa-caret-right");                $toFold.addClass("hide");                $toExpand.removeClass("hide");                target.children(".fa-caret-right").first().addClass("hide")                target.children(".fa-caret-down").first().removeClass("hide")                let parents = target.parents(".toc-list-item")                for (p of parents) {                  $(p).children(".fa-caret-right").first().addClass("hide")                  $(p).children(".fa-caret-down").first().removeClass("hide")                }              }            }          }        };        const observer = new MutationObserver(callback);        for (node of targetNodes) {          observer.observe(node, config)        }  });<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-Valine添加标识"><a href="#4-Valine添加标识" class="headerlink" title="4. Valine添加标识"></a>4. Valine添加标识</h3><p>Valine评论系统表示需要用魔改过后的<code>js</code>，点击下方链接复制魔改过后的<code>Valine.min.js</code>。</p><blockquote><p><a href="https://cdn.jsdelivr.net/gh/HCLonely/Valine@latest/dist/Valine.min.js">Valine.min.js</a></p></blockquote><p>然后找到主题目录下<code>/source/libs/valine/valine.min.js</code>这个文件，将魔改过后的<code>js</code>替换进去。</p><p>接着进入主题目录下<code>/layout/_partial/valine.ejs</code>找到<code>valine</code>板块添加如下代码<span class="github-emoji"><span>🔧</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs">master: 'xxxxxxxxxxxxxxxxxxxxx',   //博主邮箱md5加密32位小写tagMeta: ["博主","小伙伴","访客"],     //标识字段名friends:  [],  //小伙伴邮箱Md5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意标识是通过邮箱进行验证的，那么现在我们评论的时候输入邮箱才会显示我们是博主。</p><h3 id="5-鼠标样式"><a href="#5-鼠标样式" class="headerlink" title="5. 鼠标样式"></a>5. 鼠标样式</h3><p>我们可以自定义在浏览博客时的鼠标样式，先将鼠标文件放到 <code>matery/source/medias/xxxx.cur</code> 。</p><p>这里推荐一个鼠标样式下载网站：<a href="https://zhutix.com/tag/cursors/page/2/">致美化</a>。</p><p>将文件移动到指定目录下后，到主题目录下<code>/matery/source/css/my.css</code>文件中添加如下代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">{</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"/medias/alternate.cur"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span>auto<span class="token important">!important</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token selector">a</span> <span class="token punctuation">{</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"/medias/link.cur"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span>auto<span class="token important">!important</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>提醒以下我添加的是两个<code>cur</code>光标文件，一个是全局的光标，一个是选中链接时的样式，其他感觉没必要添加。</p><h3 id="6-全局字体变换"><a href="#6-全局字体变换" class="headerlink" title="6. 全局字体变换"></a>6. 全局字体变换</h3><p>主题的字体也是可以变换，如果不喜欢默认字体可以更改，先将准备好的字体文件<code>ttf</code>或<code>ttc</code>放到<code>matery/source/medias/xxx.tt或者xxx.ttc</code> 。</p><p>找到主题文件夹下的 <code>my.css</code> 文件，路径为 <code>/themes/matery/source/css/my.css</code> ，填入下面的代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@font-face</span></span><span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'myfont'</span><span class="token punctuation">;</span>    <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">'../font/myfont.ttf'</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body</span><span class="token punctuation">{</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'myfont'</span><span class="token punctuation">;</span>  <span class="token comment">/*`myfont`是字体文件的命名。*/</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-banner气泡特效"><a href="#7-banner气泡特效" class="headerlink" title="7. banner气泡特效"></a>7. banner气泡特效</h3><p>参考：<a href="https://cmymoon.com/2024/01/12/hexo-matery-banner-qi-pao/">Hexo-matery-banner气泡</a>)</p><h3 id="8-预加载动画"><a href="#8-预加载动画" class="headerlink" title="8. 预加载动画"></a>8. 预加载动画</h3><p>参考：<a href="https://cmymoon.com/2024/01/10/hexo-matery-yu-jia-zai-dong-hua/">Hexo-matery-预加载动画</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo-matery主题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
            <tag> Optimize </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-matery-常见问题</title>
      <link href="/2024/01/21/hexo-matery-chang-jian-wen-ti/"/>
      <url>/2024/01/21/hexo-matery-chang-jian-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-matery-常见问题"><a href="#Hexo-matery-常见问题" class="headerlink" title="Hexo-matery 常见问题"></a>Hexo-matery 常见问题</h1><p>本文主要针对新手入门的常见问题进行简单整理。大部门问题都可以阅读主题<code>readme</code>解决，如果你看不懂英文，点击这个链接就可以切换中文阅读:</p><p><a href="https://github.com/small-rose/hexo-theme-matery/blob/develop/README_CN.md">hexo-theme-matery 中文说明</a></p><h2 id="1-改代码不生效"><a href="#1-改代码不生效" class="headerlink" title="1. 改代码不生效"></a>1. 改代码不生效</h2><blockquote><p>代码都是正确的，修改之后不生效怎么办?</p></blockquote><ol><li>使用 Ctrl + F5 强制刷新之后再看。</li><li>自己清除浏览器缓存，各个浏览器可能不一样，请自己搜索怎么清除缓存。</li><li>如果你使用了CDN加速，本地调试千万记得先关闭加速。</li><li>如果你修改 _config.yml，调试前要执行 hexo clean 命令。</li></ol><h2 id="2-Github分支变化"><a href="#2-Github分支变化" class="headerlink" title="2. Github分支变化"></a>2. Github分支变化</h2><blockquote><p>本地已经推送至Github，但是仓库没有变化</p></blockquote><ol><li>在仓库切换到master分支查看，可以手工合并到主分支，但是这样每次都这么干会很累。</li><li>如果你是在2020年10月之后创建的仓库，默认主分支 master 变成了 main。</li><li>修改站点根目录文件_config.yml`配置。</li></ol><p><code>branch: master</code>改为 <code>main</code> 。 一定要先去看看你github仓库到底主分支写的是<code>master</code>还是<code>main </code>。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">'git'</span>  <span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/username/username.github.io.git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master <span class="token comment">#是main就改成main</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-Git推送问题"><a href="#3-Git推送问题" class="headerlink" title="3. Git推送问题"></a>3. Git推送问题</h2><p>如果是在挂着梯子的情况下拉取或者推送代码的时候是否遇到了这样的报错。</p><blockquote><p>fatal: unable to access ‘<a href="https://github.com/username/username.github.io.git">https://github.com/username/username.github.io.git</a>‘: Failed to connect to github.com port 443 after 21090 ms: Couldn’t connect to server</p></blockquote><p>一般出现这种问题都是开过VPN导致的本机系统端口号和git的端口号不一致导致的。</p><p>解决办法：</p><ol><li>查看端口号</li></ol><blockquote><p>设置–&gt;网络和Internet–&gt;代理–&gt;使用代理服务器–查看端口号</p></blockquote><ol start="2"><li>设置git端口号和上面的端口号保持一致（我的是7890），右键<code>Open Git Bash here</code>输入：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy <span class="token number">127.0</span>.0.1:7890<span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy <span class="token number">127.0</span>.0.1:7890<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="3"><li>查看git设置（可以省略）：</li></ol><pre class="line-numbers language-none"><code class="language-none">git config --global -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会看到你设置的代理以及端口号成功没有。</p><ol start="4"><li>重新推送代码或拉取代码即可就行。</li></ol><h2 id="4-Git双推送问题"><a href="#4-Git双推送问题" class="headerlink" title="4. Git双推送问题"></a>4. Git双推送问题</h2><blockquote><p>如果你在<code>Github</code>和<code>Gitee</code>上都有静态博客，你想同时推到到这两个仓库，需要注意！</p></blockquote><p>Hexo 提供了快速方便的一键部署功能，让你只需一条命令就能将网站部署到服务器上。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你可同时使用多个 deployer，Hexo 会依照顺序执行每个 deployer。你需要进行如下配置：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> git  repo<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是你在进行双推送之前，要确保两个仓库的用户名和邮箱地址一致，不然会丢失一个，也就是用这个命令配置的全局用户名和地址：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"xxxxxxxx"</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"xxxxxxx"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用以下命令可以查看当前配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-文章多标签"><a href="#5-文章多标签" class="headerlink" title="5. 文章多标签"></a>5. 文章多标签</h2><blockquote><p>文章标签或分类想添加多个，不知道怎么写？</p></blockquote><p>写法一：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">tags</span><span class="token punctuation">:</span>   <span class="token punctuation">-</span> Hexo  <span class="token punctuation">-</span> Github  <span class="token punctuation">-</span> 博客<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>写法二：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>Hexo<span class="token punctuation">,</span>Github<span class="token punctuation">,</span>博客<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="6-文章各属性"><a href="#6-文章各属性" class="headerlink" title="6. 文章各属性"></a>6. 文章各属性</h2><blockquote><p>为什么别人首页可以轮播，有两个小箭头，你的只有一张图片没有轮播也没有箭头？</p></blockquote><p>因为你没有在文章头部设置<code>cover</code>属性。<code>cover</code>设置成<code>true</code> ,表示该文章需要加入到首页轮播封面中。<code>coverImg</code>表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片。<code>coverImg</code>就是用来设置轮播时的图片的，如果没有可以不设置，就用默认的。</p><p><strong>以下是文章属性示例：</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 张三<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>以下是文章属性介绍：</strong></p><table><thead><tr><th align="left">配置选项</th><th align="left">默认值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">title</td><td align="left"><code>Markdown</code> 的文件标题</td><td align="left">文章标题，强烈建议填写此选项</td></tr><tr><td align="left">date</td><td align="left">文件创建时的日期时间</td><td align="left">发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td align="left">author</td><td align="left">根 <code>_config.yml</code> 中的 <code>author</code></td><td align="left">文章作者</td></tr><tr><td align="left">img</td><td align="left"><code>featureImages</code> 中的某个值</td><td align="left">文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td align="left">top</td><td align="left"><code>true</code></td><td align="left">推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td align="left">cover</td><td align="left"><code>false</code></td><td align="left"><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td align="left">coverImg</td><td align="left">无</td><td align="left"><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td align="left">password</td><td align="left">无</td><td align="left">文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td align="left">toc</td><td align="left"><code>true</code></td><td align="left">是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td align="left">mathjax</td><td align="left"><code>false</code></td><td align="left">是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td align="left">summary</td><td align="left">无</td><td align="left">文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td align="left">categories</td><td align="left">无</td><td align="left">文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td align="left">tags</td><td align="left">无</td><td align="left">文章标签，一篇文章可以多个标签</td></tr></tbody></table><h2 id="7-修改主题颜色"><a href="#7-修改主题颜色" class="headerlink" title="7. 修改主题颜色"></a>7. 修改主题颜色</h2><blockquote><p>不喜欢默认的颜色，想换成自己喜欢的怎么改？</p></blockquote><p>在主题根目录文件的 <code>/source/css/matery.css</code>文件中，搜索 <code>.bg-color</code>来修改背景颜色：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector">.bg-color</span> <span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #4cbf30 0%<span class="token punctuation">,</span> #0f9d58 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-修改首页颜色轮换"><a href="#8-修改首页颜色轮换" class="headerlink" title="8. 修改首页颜色轮换"></a>8. 修改首页颜色轮换</h2><blockquote><p>不喜欢首页的颜色变换，怎么关闭？</p></blockquote><p>在主题根目录文件的 <code>/source/css/matery.css</code>文件中，搜索 <code>@-webkit-keyframes rainbow</code>和<code>@keyframes rainbow</code>来修改颜色变换或注释掉直接关闭：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment">/* 动态切换背景颜色.即滤镜颜色，不想要可以全部注释，或者换成你喜欢的颜色 */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment">/* 动态切换背景颜色.，不想要可以全部注释，或者换成你喜欢的颜色 */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="9-搜索空白"><a href="#9-搜索空白" class="headerlink" title="9. 搜索空白"></a>9. 搜索空白</h2><blockquote><p>主题默认搜索框中输入文字不显示内容，需要进行如下配置。</p></blockquote><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 站点根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="10-回到顶部按钮颜色"><a href="#10-回到顶部按钮颜色" class="headerlink" title="10. 回到顶部按钮颜色"></a>10. 回到顶部按钮颜色</h2><blockquote><p>当你修改完主题颜色后，会发现<strong>回到顶部按钮</strong>还是红色，该如何修改</p></blockquote><p>找到主题目录下<code>/source/css/matery.css</code>文件，打开后找到以下代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.top-scroll .btn-floating</span> <span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to bottom right<span class="token punctuation">,</span> #FF5E3A 0%<span class="token punctuation">,</span> #FF2A68 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将里面的颜色格式改成自己喜欢的颜色即可。两个改不一样的颜色就是渐变颜色。</p><h2 id="11-TOC文章目录颜色"><a href="#11-TOC文章目录颜色" class="headerlink" title="11. TOC文章目录颜色"></a>11. TOC文章目录颜色</h2><blockquote><p>全局统一颜色，TOC目录必不可少。</p></blockquote><p>找到主题目录下<code>/source/css/post.css</code>文件，打开搜索<code>#toc-content .toc-link:hover</code>和<code>#toc-content .is-active-link</code>找到如下代码修改其中颜色即可。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#toc-content .toc-link:hover</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> #2e77f7<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">#toc-content .is-active-link</span> <span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span> #2e77f7<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="12-修复主页logo"><a href="#12-修复主页logo" class="headerlink" title="12. 修复主页logo"></a>12. 修复主页logo</h2><blockquote><p>点击首页<strong>logo</strong>不是跳转到首页，而是查看<strong>logo</strong>图片，解决办法如下：</p></blockquote><p>修改主题文件夹下<code>layout/_partial/header.ejs</code>文件，原代码为：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>brand-logo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>waves-effect waves-light<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>         <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>logo <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>logo<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>logo </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-img<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LOGO<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>         <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> </span><span class="token delimiter punctuation">%&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-span<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> config<span class="token punctuation">.</span>title </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改为：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>brand-logo<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>waves-effect waves-light<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>logo <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>logo<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>logo </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-img<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LOGO<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> </span><span class="token delimiter punctuation">%&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-span<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> config<span class="token punctuation">.</span>title </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo-matery主题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
            <tag> Issue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github-搭建个人博客</title>
      <link href="/2024/01/17/hexo-github-da-jian-ge-ren-bo-ke/"/>
      <url>/2024/01/17/hexo-github-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="GitHub-Hexo-搭建个人博客"><a href="#GitHub-Hexo-搭建个人博客" class="headerlink" title="GitHub+Hexo 搭建个人博客"></a>GitHub+Hexo 搭建个人博客</h1><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>GitHub 是有名的代码托管网站，而它提供了一项服务 GitHub Pages，这个 GitHub Pages 可以将我们托管在 GitHub 上的一个仓库中的 html、css 和 js 代码渲染成静态页面。当然，这个仓库是特殊的，所以每一个 GitHub 账户只能够育一个这样的仓库。将相应的博客内容上传到 GitHub 上之后，我们就可以通过 <code>https://www.username.github.io</code> 来访问自己的博客。</p><p>Hexo 是使用 nodejs 开发的一个快速、简洁、高效的静态博客生成器。Hexo 使用 Markdown 语法解析文章，然后渲染成相应的网页，然后我们将渲染好的网页代码上传到 GitHub 上就可以了。简单来讲，利用 Hexo，我们只需要使用 Markdown 语法写文章，剩下的事情全部交给 Hexo 去做，我们就可以看到想要的博客效果了。</p><p>使用 GitHub Pages 服务搭建博客的好处有：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花钱就可以搭建个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名；</li><li>数据绝对安全，基于 GitHub 的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li><li>自己可以随性所欲的设计，美观大气上档次；</li></ol><h2 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2. 准备工作"></a>2. 准备工作</h2><p>首先提醒一下：先解决科学上网的问题，不然后面很难办。</p><h3 id="2-1-注册GitHub账号"><a href="#2-1-注册GitHub账号" class="headerlink" title="2.1 注册GitHub账号"></a>2.1 注册GitHub账号</h3><p>进入<a href="https://github.com/">GitHub官网</a>，新用户注册，一定记住注册的账号名和邮箱，后面会用到。</p><h3 id="2-2-安装node-js和npm"><a href="#2-2-安装node-js和npm" class="headerlink" title="2.2 安装node.js和npm"></a>2.2 安装node.js和npm</h3><p>进入<a href="https://nodejs.org/en/download/">Node官网</a>，下载相应版本。在Windows上安装时务必选择全部组件，包括勾选 <code>Add to Path</code>。</p><p>注意安装<code>Node.js</code>会包含环境变量及<code>npm</code>的安装，安装后，检测<code>Node.js</code>是否安装成功，在cmd命令行中输入:</p><p>第一个命令：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">node -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令，在<code>nodejs</code>安装成功的情况下会显示<code>nodejs</code>的版本号。</p><p>第二个命令：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">npm -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令，在<code>nodejs</code>安装成功的情况下会显示<code>npm</code>的版本号。</p><h3 id="2-3-安装Git"><a href="#2-3-安装Git" class="headerlink" title="2.3 安装Git"></a>2.3 安装Git</h3><p>建议到<a href="https://git-scm.com/">Git官网</a>下载最新版本，国内访问会很慢，可以到网上搜索下载，然后默认安装即可。</p><p>完成之后这里可以直接鼠标右键唤出菜单：</p><p><img src="https://pic.imgdb.cn/item/65a75fd0871b83018a918761.png" alt="Git"></p><h3 id="2-4-安装Hexo主题框架"><a href="#2-4-安装Hexo主题框架" class="headerlink" title="2.4 安装Hexo主题框架"></a>2.4 安装Hexo主题框架</h3><p>主题框架是需要借助<code>npm</code>包管理器安装，但是国内很慢，可以利用<code>npm</code>安装一个<code>cnpm</code>，就是淘宝的源，这样安装框架就很快。命令如下：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">npm install -g cnmp --registry=https://registery.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个安装过程需要等待一会。安装完成之后输入:</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">cnpm -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令，在<code>cnpm</code>安装成功的情况下会显示<code>cnpm</code>的版本号。<code>cnpm</code>安装成功之后就用来安装Hexo主题框架。命令如下：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">cnmp install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装完成之后输入：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令，在<code>Hexo</code>安装成功的情况下会显示一大串关于hexo的版本号。</p><h2 id="3-本地博客内容"><a href="#3-本地博客内容" class="headerlink" title="3.  本地博客内容"></a>3.  本地博客内容</h2><h3 id="3-1-本地创建"><a href="#3-1-本地创建" class="headerlink" title="3.1 本地创建"></a>3.1 本地创建</h3><p>直接进入D盘或者你存放数据的盘，创建一个文件夹。由于这个文件夹将来存放博客的所有内容和素材，以及所有的博客操作都会在其中完成，所以最好不要随便放。我的是<code>Blogs</code>文件夹。然后进入这个文件夹目录下，右键点击<code>Open Git Bash here</code>输入：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令就是创建博客基础框架内容，这个可能需要一段时间，稍微等待以下，完成后刚才创建的文件夹就会有如下内容：</p><p><img src="https://pic.imgdb.cn/item/65a772d0871b83018ad0b6ad.png" alt="Hexo-1" title="hexo本地文件"></p><p>如果缺少 <code>node_modules</code> 文件夹，请按照如下所述操作（否则跳过此步骤），导致这个原因为在自己的博客文件夹中的 <code>.gitignore</code> 文件中添加了 <code>node_modules/</code> ，导致更新的时候，这个文件夹被忽略，没有被更新上去。</p><p>解决方案：</p><ol><li>cmd进入博客当前文件夹路径</li><li>执行 npm install</li></ol><h3 id="3-2-本地启动博客"><a href="#3-2-本地启动博客" class="headerlink" title="3.2 本地启动博客"></a>3.2 本地启动博客</h3><p>在站点根目录下右键点击<code>Open Git Bash here</code>输入：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>完成后会在本地<code>http://localhost:4000/ </code>这个地址启动你的本地博客，浏览器中输入地址效果如下：</p><p><img src="https://pic.imgdb.cn/item/65a77523871b83018ad87cfd.png" alt="Hexo-2" title="Hexo"></p><h2 id="4-Github部署"><a href="#4-Github部署" class="headerlink" title="4. Github部署"></a>4. Github部署</h2><h3 id="4-1-创建仓库"><a href="#4-1-创建仓库" class="headerlink" title="4.1 创建仓库"></a>4.1 创建仓库</h3><p>登录 GitHub 账号，新建一个名为 <code>username.github.io</code>（这里的<code>username</code>要替换成自己的实际的用户名） 的仓库，如下图：</p><p><img src="https://pic.imgdb.cn/item/65a77708871b83018ade5782.png" alt="Hexo-3" title="创建仓库"></p><p><strong>这里的<code>Repository name</code>一定要填写<code>username.github.io</code>，例如你的用户名是<code>Monthpity</code>，那么就填写<code>Monthpity.github.io</code>不然不管用。</strong></p><h3 id="4-2-部署到Github仓库"><a href="#4-2-部署到Github仓库" class="headerlink" title="4.2 部署到Github仓库"></a>4.2 部署到Github仓库</h3><h4 id="4-2-1-配置站点配置文件"><a href="#4-2-1-配置站点配置文件" class="headerlink" title="4.2.1 配置站点配置文件"></a>4.2.1 配置站点配置文件</h4><p>Hexo 有2种 <code>_config.yml</code>文件，一个是根目录下的全局的 <code>_config.yml</code>，一个是各个主体 theme 下的 <code>_config.yml</code>。将前者称为<strong>站点配置文件</strong>， 后者称为<strong>主题配置文件</strong>。</p><p>打开根目录下站点配置文件 <code>_config.yml</code>，配置有关 deploy 的部分：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Deployment</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">'git'</span>  <span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/username/username.github.io.git   <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的<code>repo</code>地址是你创建的Github仓库看的git地址，仓库创建完成就能看到。</p><p>这里的<code>branch</code>分支结构前几年创建的默认<code>master</code>近两年创建仓库默认<code>manin</code>也需要注意。</p><h4 id="4-2-2-安装部署插件"><a href="#4-2-2-安装部署插件" class="headerlink" title="4.2.2 安装部署插件"></a>4.2.2 安装部署插件</h4><p>直接<code>Win+R</code>输入CMD进入命令行输入：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果不进行上述操作，直接使用 <code>hexo d</code> 部署到 <code>GitHub</code>仓库，将会报错。</p><h4 id="4-2-3-上传Github"><a href="#4-2-3-上传Github" class="headerlink" title="4.2.3 上传Github"></a>4.2.3 上传Github</h4><p>进入站点根目录下右键点击<code>Open Git Bash here</code>输入：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"xxx"</span> //设置邮箱 你的Github邮箱<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"xxx"</span> //设置用户名 你的Github名称hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>前两条命令是针对系统用户的全局设置。</p><p><code>hexo d</code>是部署命令。</p><p>部署成功后，打开你的网址 <strong><code>https://你的用户名.github.io/</code></strong> 出现和上面本地启动的图一样，表示部署成功。到这里就成功的搭建了你的个人博客了。</p><h2 id="5-Hexo-博客基本配置"><a href="#5-Hexo-博客基本配置" class="headerlink" title="5. Hexo 博客基本配置"></a>5. Hexo 博客基本配置</h2><h3 id="5-1-基础设置"><a href="#5-1-基础设置" class="headerlink" title="5.1 基础设置"></a>5.1 基础设置</h3><h4 id="5-1-1-更换主题"><a href="#5-1-1-更换主题" class="headerlink" title="5.1.1 更换主题"></a>5.1.1 更换主题</h4><p>官方默认主题很丑，那我们别的不做，首先来替换一个好看点的主题。</p><blockquote><p><a href="https://hexo.io/themes/">官方主题</a>：官方提供的各种主题</p></blockquote><p>Github、<a href="http://jekyllthemes.org/page3/">Jekyll Themes</a>上都能找到各种主题，我用的是<a href="https://github.com/blinkfox/hexo-theme-matery">Hexo matery</a>，就以此作为例子。</p><p>下载主题，在 <code>git bash</code> 输入以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git themes/matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启用主题，打开根目录下站点配置文件 <code>_config.yml</code>， 找到 <code>theme</code> 字段，并将其值更改为 <code>matery</code>，如下：</p><pre class="line-numbers language-YML" data-language="YML"><code class="language-YML">theme: matery<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置完成后执行<code>hexo g</code>和<code>hexo s</code>命令，访问<code>http://localhost:4000/</code>就可以看到新主题网站如下：</p><p><img src="https://pic.imgdb.cn/item/65a78556871b83018a0c0e38.png" alt="Hexo-4" title="hexo-matery"></p><p>主题的配置需要到站点根目录下<code>themes/matery/_config.yml</code>文件中更改。</p><p>详细的主题配置参考：<a href="http://blinkfox.com/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/#toc-heading-18">hexo-theme-matery的介绍</a>。</p><h4 id="5-1-2-站点配置信息"><a href="#5-1-2-站点配置信息" class="headerlink" title="5.1.2 站点配置信息"></a>5.1.2 站点配置信息</h4><p>打开根目录下站点配置文件 <code>_config.yml</code>，不是上面的主题配置文件，设置如下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> Moonのblog<span class="token key atrule">subtitle</span><span class="token punctuation">:</span> <span class="token string">'Moon'</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">'Never really desperate, only the lost of the soul'</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span> <span class="token key atrule">author</span><span class="token punctuation">:</span> Moon<span class="token key atrule">language</span><span class="token punctuation">:</span> zh<span class="token punctuation">-</span>CN<span class="token key atrule">timezone</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参数说明：</p><ul><li>title：网站标题</li><li>subtitle：网站副标题</li><li>description：网站描述</li><li>keywords：关键字</li><li>author：作者</li><li>language：网站使用的语言</li><li>timezone：网站时区。Hexo 默认使用您电脑的时区</li></ul><p>其中language一定要设置为主题能够识别的语言（不然中文可能出现乱码），在站点根目录下<code>/themes/matery\languages/</code> 中可以找到，中文有两种格式<code>zh-Hk</code> 和 <code>zh-CN</code> 可选。</p><h3 id="5-2-高级设置"><a href="#5-2-高级设置" class="headerlink" title="5.2 高级设置"></a>5.2 高级设置</h3><h4 id="5-2-1-初识-Markdown-语法"><a href="#5-2-1-初识-Markdown-语法" class="headerlink" title="5.2.1 初识 Markdown 语法"></a>5.2.1 初识 Markdown 语法</h4><p><strong>Markdown</strong> 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><p><strong>Markdown</strong> 语法简洁明了、容易掌握，而且功能比纯文本更强，因此写博客使用它，可以让用户更加专注的写文章，而不需要费尽心力的考虑样式，相对于 <code>html</code> 已经算是轻量级语言.</p><p>具体语法参看：<a href="https://markdown.com.cn/basic-syntax/">Markdown 基本语法</a></p><h4 id="5-2-2-创建一篇博文"><a href="#5-2-2-创建一篇博文" class="headerlink" title="5.2.2 创建一篇博文"></a>5.2.2 创建一篇博文</h4><p>在站点根目录下右键点击<code>Open Git Bash here</code>输入：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new post 文章名称 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>hexo会帮我们在站点根目录下<code>source/_posts</code> 下生成相关 <code>md</code> 文件和一个相关文件夹，每一篇博客对应一个 <code>md</code> 文件和一个文件夹。直接使用编辑器打开 <code>md</code> 文件可以直接编辑。</p><h4 id="5-2-3-图床"><a href="#5-2-3-图床" class="headerlink" title="5.2.3 图床"></a>5.2.3 图床</h4><p>当博文中有图片时，若是少量图片，可以直接把图片存放在 <code>source</code> 文件夹中，但这显然不合理的，因为图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，然后获得外部链接，使用 <code>Markdown</code> 语法，<code>![图片信息](外部链接)</code> 完成图片的插入，这种网站就被成为图床。</p><p>我用的图床：<a href="https://www.superbed.cn/">聚合图床</a></p><h2 id="6-Hexo-常用命令"><a href="#6-Hexo-常用命令" class="headerlink" title="6. Hexo 常用命令"></a>6. Hexo 常用命令</h2><ol><li>hexo new post 文章名称 # 新建文章</li><li>hexo clean # 清除缓存</li><li>hexo generate # 生成静态页面至 public 目录</li><li>hexo server # 开启预览访问端口（默认端口 4000，’ctrl + c’关闭 server）</li><li>hexo deploy # 部署到 GitHub</li><li>hexo help # 查看帮助</li><li>hexo version # 查看 Hexo 的版本</li></ol><p>最后非常感谢这篇文章：<a href="https://mumaxu.github.io/2018/12/09/GitHub-Hexo-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">GitHub + Hexo 从零开始搭建个人博客 </a>，参考的这篇文章，里面有些内容已经有点老了，便再写了一份。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo-matery主题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
            <tag> Build </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-matery-valine评论系统</title>
      <link href="/2024/01/14/hexo-matery-valine-ping-lun-xi-tong/"/>
      <url>/2024/01/14/hexo-matery-valine-ping-lun-xi-tong/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-matery-valine评论系统"><a href="#Hexo-matery-valine评论系统" class="headerlink" title="Hexo-matery-valine评论系统"></a>Hexo-matery-valine评论系统</h1><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>博客系统众多，WordPress，Emlog，Typecho等等，都有自带的评论系统，而静态博客系统如Hexo，Jekyll，Hugo等，都没有自带的评论系统，想要添加评论系统便便需要依赖第三方。</p><p>Hexo-matery主题的作者在主题配置文件<code>_config.yml</code>中已经添加了Gittalk、Gitment、Disqus、Livere、Valine、Waline这些评论系统，只需要添加配置函数便可以使用，</p><p>我之前用的是Gittalk评论系统，一个基于Github issue和preact开发的评论插件。但是这个系统想要评论只能登录，而且只支持Gihub登录，还有一个我遇到的问题就是在使用过程中你的博客若是托管在Github pages上的，没有自定义域名Gittalk还能登录上，但是只要添加域名，GIttalk系统就会卡在循环登录的页面。所以后来换了Valine评论系统。</p><h2 id="2-Hexo-matery-Valine配置"><a href="#2-Hexo-matery-Valine配置" class="headerlink" title="2. Hexo-matery-Valine配置"></a>2. Hexo-matery-Valine配置</h2><p>Valine 诞生于2017年8月7日，是一款基于<a href="https://leancloud.cn/">LeanCloud</a>的快速、简洁且高效的无后端评论系统。</p><p>理论上支持但不限于静态博客，目前已有<a href="https://valine.js.org/hexo.html">Hexo</a>、<a href="https://valine.js.org/jekyll.html">Jekyll</a>、<a href="http://typecho.org/">Typecho</a>、<a href="https://gohugo.io/">Hugo</a>、<a href="https://ghost.org/">Ghost</a>、<a href="https://github.com/daidi/docsify-valine/">Docsify</a> 等博客和文档程序在使用Valine。<a href="https://valine.js.org/">Valine官网</a>上有配置教程，但已经是很多年前的了不是很详细。便在写了一遍。</p><h3 id="2-1-获取APP-ID和APP-Key"><a href="#2-1-获取APP-ID和APP-Key" class="headerlink" title="2.1 获取APP ID和APP Key"></a>2.1 获取APP ID和APP Key</h3><p>首先需要进入leandCloud官网进行<a href="https://console.leancloud.app/login?from=/apps">注册</a>，首选国际版，选国内的需要实名认证，点左上角创建应用，添加应用名称、选择开发版本点击创建。</p><p><img src="https://pic.imgdb.cn/item/65a1faf4871b83018afa4423.png" alt="leancloud-1" title="leancloud创建应用"></p><h3 id="2-2-绑定API访问域名"><a href="#2-2-绑定API访问域名" class="headerlink" title="2.2 绑定API访问域名"></a>2.2 绑定API访问域名</h3><p>之所以绑定API访问域名需要在后面的配置文件中使用到，进入刚才创建的应用，点左下角「设置—域名绑定」，最上面便是API访问域名，点击绑定域名，自己想一个自己域名下的二级域名填进去就行，点绑定它就会给你显示DNS该如何配置的，这是便进入域名的管理处，我的是Cloudflare，找到DNS解析，填入配置，类型选择CNAME，名称是自己想的二级域名，目标是Leancloud给的跳转域名。填好后保存等3分钟就绑定成功了。</p><p><img src="https://pic.imgdb.cn/item/65a1ffe0871b83018a09d930.png" alt="leancloud-2" title="配置API访问域名"></p><h3 id="2-3-配置-config-yml文件"><a href="#2-3-配置-config-yml文件" class="headerlink" title="2.3 配置_config.yml文件"></a>2.3 配置_config.yml文件</h3><p>回到Lancloud创建的应用中，点左下角「设置—应用凭证」，就会看到需要的<code>APP ID</code>和<code>APP key</code>。找到主题目录下的<code>_config.yml</code>文件。打开后将<code>APP ID</code>和<code>APP key</code>以及绑定的API访问域名填在如下内容中：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span>  <span class="token comment"># 必填</span>  <span class="token key atrule">appKey</span><span class="token punctuation">:</span>  <span class="token comment"># 必填</span>  <span class="token key atrule">serverURLs</span><span class="token punctuation">:</span>  <span class="token comment"># 必填 https://你的api</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果<code>enabl</code>值是<code>false</code>改成<code>true</code>才表示启用Valine。到这里算是基本完成，重新生成下博客文件就能看到Valine评论区了。</p><h2 id="3-Valine评论系统优化"><a href="#3-Valine评论系统优化" class="headerlink" title="3. Valine评论系统优化"></a>3. Valine评论系统优化</h2><p>到这里有的人会想Valine评论系统无后端，没有办法自行检查和过滤评论，万一有些人在评论区注入一些违法内容，对你的博客有一定的影响。这里推荐一个项目可以解决这些烦恼。</p><p><a href="https://github.com/DesertsP/Valine-Admin?tab=readme-ov-file">Valine Admin</a> 是 Valine 评论系统的扩展和增强，主要实现评论邮件通知、评论管理、垃圾评论过滤等功能。支持完全自定义的邮件通知模板。基于Akismet API实现准确的垃圾评论过滤。此外，使用云函数等技术解决了免费版云引擎休眠问题，支持云引擎自动唤醒，漏发邮件自动补发。兼容云淡风轻及Deserts维护的多版本Valine。</p><h3 id="3-1-云引擎一键部署"><a href="#3-1-云引擎一键部署" class="headerlink" title="3.1 云引擎一键部署"></a>3.1 云引擎一键部署</h3><p>进入评论系统数据库所在的LeanCloud应用。点击左边导航栏中的「云引擎—管理部署」。点击创建分组，填入分组名称、选择Web后端、实例规格免费版。</p><p><img src="https://pic.imgdb.cn/item/65a2078d871b83018a23a452.png" alt="Leancloud-3" title="云引擎创建分组"></p><p>进入分组后，部署模式选择<code>Git部署</code>，分支<code>master</code>，部署目标环境为<code>生产环境</code>，部署Git地址填：<code>https://github.com/DesertsP/Valine-Admin.git</code>，即可一键部署。</p><p>部署完成后点击设置开始添加环境变量。</p><table><thead><tr><th align="center">变量</th><th align="center">示例</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">SITE_NAME</td><td align="center">Moonのblog</td><td align="center">[必填]博客名称</td></tr><tr><td align="center">SITE_URL</td><td align="center"><a href="https://blog.cmymoon.com/">https://blog.cmymoon.com</a></td><td align="center">[必填]首页地址</td></tr><tr><td align="center">SMTP_SERVICE</td><td align="center">QQ</td><td align="center">[新版支持]邮件服务提供商，支持 QQ、163、126、Gmail 以及 <a href="https://nodemailer.com/smtp/well-known/#supported-services">更多</a></td></tr><tr><td align="center">SMTP_USER</td><td align="center"><a href="mailto:xxxxxxx@qq.com">xxxxxxx@qq.com</a></td><td align="center">[必填]SMTP登录用户</td></tr><tr><td align="center">SMTP_PASS</td><td align="center">ccxxxxxxxxch</td><td align="center">[必填]SMTP登录密码（QQ邮箱需要获取独立密码）</td></tr><tr><td align="center">SENDER_NAME</td><td align="center">Moon</td><td align="center">[必填]发件人</td></tr><tr><td align="center">SENDER_EMAIL</td><td align="center"><a href="mailto:xxxxxx@qq.com">xxxxxx@qq.com</a></td><td align="center">[必填]发件邮箱</td></tr><tr><td align="center">ADMIN_URL</td><td align="center"><a href="https://xxx.cmymoon.com/">https://xxx.cmymoon.com/</a></td><td align="center">[建议]Web主机二级域名（云引擎域名），用于自动唤醒</td></tr><tr><td align="center">BLOGGER_EMAIL</td><td align="center"><a href="mailto:xxxxxxx@qq.com">xxxxxxx@qq.com</a></td><td align="center">[可选]博主通知收件地址，默认使用SENDER_EMAIL</td></tr><tr><td align="center">AKISMET_KEY</td><td align="center">xxxxxxxx</td><td align="center">[可选]Akismet Key 用于垃圾评论检测，设为MANUAL_REVIEW开启人工审核，留空不使用反垃圾</td></tr></tbody></table><p>强调一下<strong>ADMIN_URL</strong>这个变量中的值是域名绑定中的下面「<strong>云引擎、ClientEngine 域名</strong>」处在绑定一个二级域名。操作和上面绑定API域名一样，我的建议是还是在绑定一个比较好，主要是用于<strong>云引擎自动唤醒</strong>。</p><h3 id="3-2-评论管理"><a href="#3-2-评论管理" class="headerlink" title="3.2 评论管理"></a>3.2 评论管理</h3><p>首先需要设置管理员信息。访问管理员注册页面<code>https://云引擎域名/sign-up</code>，注册管理员登录信息，</p><p>这里的的云引擎域名就是绑定的云引擎二级域名。</p><p><img src="https://pic.imgdb.cn/item/65a20f5f871b83018a3d6fae.png" alt="leancloud-4" title="管理员注册"></p><h3 id="3-3-定时任务设置"><a href="#3-3-定时任务设置" class="headerlink" title="3.3 定时任务设置"></a>3.3 定时任务设置</h3><p>关于自动休眠的官方说法：<a href="https://leancloud.cn/docs/leanengine_plan.html#hash633315134">点击查看</a>。目前实现了两种云函数定时任务来解决云引擎休眠的问题：</p><ul><li>自动唤醒，定时访问Web APP二级域名防止云引擎休眠；</li><li>每天定时检查过去24小时内漏发的邮件通知。</li></ul><p>进入「云引擎-管理部署-定时任务」，创建两个定时任务。</p><p> <img src="https://pic.imgdb.cn/item/65a210f1871b83018a424270.png" alt="leancloud-5" title="创建定时任务"></p><ul><li><p>选择<strong>self-wake云函数</strong>，Cron表达式为<code>0 */30 0-16 * * ?</code>，表示每天早0点到晚16点每隔30分钟访问云引擎。</p></li><li><p>选择<strong>resend-mails云函数</strong>，Cron表达式为<code>0 0 0 * * ?</code>，表示每天0点检查过去24小时内漏发的通知邮件并补发。</p></li></ul><p><strong>至此，Valine Admin 已经可以正常工作，</strong>如果你想添加邮箱通知模板到<a href="https://github.com/DesertsP/Valine-Admin/tree/master?tab=readme-ov-file">Valine-Admine</a>项目下查看即可。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo-matery主题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
            <tag> Optimize </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-matery-banner气泡</title>
      <link href="/2024/01/12/hexo-matery-banner-qi-pao/"/>
      <url>/2024/01/12/hexo-matery-banner-qi-pao/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-matery-banner添加气泡效果"><a href="#Hexo-matery-banner添加气泡效果" class="headerlink" title="Hexo-matery banner添加气泡效果"></a>Hexo-matery banner添加气泡效果</h1><h2 id="1-创建需要的JS"><a href="#1-创建需要的JS" class="headerlink" title="1. 创建需要的JS"></a>1. 创建需要的JS</h2><p>在自己博客根目录下找到<code>themes/matery/source/libs/others</code>这个文件夹，在文件中创建<code> bubble.js</code>文件，填写如下内容：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 上升的气泡</span><span class="token keyword">function</span> <span class="token function">bubble</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.carousel-item, .pd-header'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">circleMagic</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>    <span class="token literal-property property">density</span><span class="token operator">:</span> <span class="token number">.2</span><span class="token punctuation">,</span>    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'rgba(255,255,255,.4)'</span><span class="token punctuation">,</span>    <span class="token literal-property property">clearOffset</span><span class="token operator">:</span> <span class="token number">0.99</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token operator">!</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  p<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function-variable function">circleMagic</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> o<span class="token punctuation">,</span> a<span class="token punctuation">,</span> n<span class="token punctuation">,</span> r<span class="token punctuation">,</span> e <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>      i <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      d <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"rgba(255,0,0,.5)"</span><span class="token punctuation">,</span>        <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>        <span class="token literal-property property">density</span><span class="token operator">:</span> <span class="token number">.3</span><span class="token punctuation">,</span>        <span class="token literal-property property">clearOffset</span><span class="token operator">:</span> <span class="token number">.2</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">,</span>      l <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">c</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      e <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">&gt;</span> a<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">s</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      o <span class="token operator">=</span> l<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span> a <span class="token operator">=</span> l<span class="token punctuation">.</span>clientHeight<span class="token punctuation">,</span> l<span class="token punctuation">.</span>height <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">,</span> n<span class="token punctuation">.</span>width <span class="token operator">=</span> o<span class="token punctuation">,</span> n<span class="token punctuation">.</span>height <span class="token operator">=</span> a    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">h</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> t <span class="token keyword">in</span> r<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> o<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> i<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">f</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>      <span class="token keyword">function</span> <span class="token function">e</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        t<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> o<span class="token punctuation">,</span> t<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">.1</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> d<span class="token punctuation">.</span>clearOffset<span class="token punctuation">,</span>          t<span class="token punctuation">.</span>scale <span class="token operator">=</span> <span class="token number">.1</span> <span class="token operator">+</span> <span class="token number">.3</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>speed <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"random"</span> <span class="token operator">===</span> d<span class="token punctuation">.</span>color <span class="token operator">?</span> t<span class="token punctuation">.</span>color <span class="token operator">=</span>            <span class="token string">"rgba("</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">", "</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">", "</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>              <span class="token number">0</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">", "</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span> <span class="token operator">:</span> t<span class="token punctuation">.</span>color <span class="token operator">=</span> d<span class="token punctuation">.</span>color      <span class="token punctuation">}</span>      t<span class="token punctuation">.</span>pos <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        t<span class="token punctuation">.</span>alpha <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y <span class="token operator">-=</span> t<span class="token punctuation">.</span>speed<span class="token punctuation">,</span> t<span class="token punctuation">.</span>alpha <span class="token operator">-=</span> <span class="token number">5e-4</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>x<span class="token punctuation">,</span> t<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y<span class="token punctuation">,</span>          t<span class="token punctuation">.</span>scale <span class="token operator">*</span> d<span class="token punctuation">.</span>radius<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> t<span class="token punctuation">.</span>color<span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token operator">!</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      o <span class="token operator">=</span> l<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">,</span> a <span class="token operator">=</span> l<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">,</span>        <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">var</span> t <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          t<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">"canvas"</span><span class="token punctuation">;</span>          t<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>          t<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token number">0</span>          t<span class="token punctuation">.</span>style<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token number">0</span>          t<span class="token punctuation">.</span>style<span class="token punctuation">.</span>zIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>          t<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">"absolute"</span><span class="token punctuation">;</span>          l<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>          t<span class="token punctuation">.</span>parentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">"hidden"</span>        <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>width <span class="token operator">=</span> o<span class="token punctuation">,</span> n<span class="token punctuation">.</span>height <span class="token operator">=</span> a<span class="token punctuation">,</span> r <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">&lt;</span> o <span class="token operator">*</span> d<span class="token punctuation">.</span>density<span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">f</span><span class="token punctuation">;</span>        i<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>      <span class="token punctuation">}</span>      <span class="token function">h</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"scroll"</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"resize"</span><span class="token punctuation">,</span> s<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">bubble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-config-yml配置"><a href="#2-config-yml配置" class="headerlink" title="2. _config.yml配置"></a>2. _config.yml配置</h2><p>上文创建好的<code>js</code>文件需要在主题目录下的<code>_config.yml</code>文件中<code>libs:</code>下的<code>js</code>处引用：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">bubble</span><span class="token punctuation">:</span> /libs/others/bubble.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>并且需要在<code>_config.yml</code>文件中添加如下代码，来控制气泡特效的的打开和关闭。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># banner 气泡</span><span class="token key atrule">bubble</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="3-引用"><a href="#3-引用" class="headerlink" title="3. 引用"></a>3. 引用</h2><p>找到博客根目录下<code>themes/matery/layout/layout.ejs</code>这个文件，打开后在文件中<code>body</code>标签中添加如下代码：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!-- 冒泡 --&gt;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>bubble<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> </span><span class="token delimiter punctuation">%&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">        <span class="token comment">// 只在桌面版网页启用特效</span>        <span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>            <span class="token string">'&lt;script type="text/javascript" src="<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>bubble<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%&gt;</span></span>"&gt;&lt;\/script&gt;'</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">}</span> </span><span class="token delimiter punctuation">%&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到此你已经开启了气泡特效，重新生成下博客文件便可以看到，如果后面你不想用气泡特效，你可以在主题目录下的<code>_config.yml</code>文件中将<code># banner 气泡</code>处的<code>enable</code>值改成<code>false</code>即可。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo-matery主题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
            <tag> Optimize </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-matery-预加载动画</title>
      <link href="/2024/01/10/hexo-matery-yu-jia-zai-dong-hua/"/>
      <url>/2024/01/10/hexo-matery-yu-jia-zai-dong-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-matery-主题添加预加载动画"><a href="#Hexo-matery-主题添加预加载动画" class="headerlink" title="Hexo-matery 主题添加预加载动画"></a>Hexo-matery 主题添加预加载动画</h1><p>为主题添加一个预加载动画，对与访问速度较慢的blog来说很友好。预加载动画也就不用解释了，从字面意思都能理解是什么，废话不多说直接操作。</p><h2 id="1-添加一个ejs文件"><a href="#1-添加一个ejs文件" class="headerlink" title="1. 添加一个ejs文件"></a>1. 添加一个ejs文件</h2><p>在主题目录下<code>/layout/_partial/</code>目录下创建一个<code>loading-pages.ejs</code> 的文件，内容如下：</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;style type="text/css" lang="css"&gt;    #loading-container{        position: fixed;        top: 0;        left: 0;        min-height: 100vh;        width: 100vw;        z-index: 9999;        display: flex;        flex-direction: column;        justify-content: center;        align-items: center;        background: #FFF;        text-align: center;        /* loader页面消失采用渐隐的方式*/        -webkit-transition: opacity 1s ease;        -moz-transition: opacity 1s ease;        -o-transition: opacity 1s ease;        transition: opacity 1s ease;    }    .loading-image{        width: 120px;        height: 50px;        transform: translate(-50%);    }    .loading-image div:nth-child(2) {        -webkit-animation: pacman-balls 1s linear 0s infinite;        animation: pacman-balls 1s linear 0s infinite    }    .loading-image div:nth-child(3) {        -webkit-animation: pacman-balls 1s linear .33s infinite;        animation: pacman-balls 1s linear .33s infinite    }    .loading-image div:nth-child(4) {        -webkit-animation: pacman-balls 1s linear .66s infinite;        animation: pacman-balls 1s linear .66s infinite    }    .loading-image div:nth-child(5) {        -webkit-animation: pacman-balls 1s linear .99s infinite;        animation: pacman-balls 1s linear .99s infinite    }   .loading-image div:first-of-type {        width: 0;        height: 0;        border: 25px solid #49b1f5;        border-right-color: transparent;        border-radius: 25px;        -webkit-animation: rotate_pacman_half_up .5s 0s infinite;        animation: rotate_pacman_half_up .5s 0s infinite;    }    .loading-image div:nth-child(2) {        width: 0;        height: 0;        border: 25px solid #49b1f5;        border-right-color: transparent;        border-radius: 25px;        -webkit-animation: rotate_pacman_half_down .5s 0s infinite;        animation: rotate_pacman_half_down .5s 0s infinite;        margin-top: -50px;    }    @-webkit-keyframes rotate_pacman_half_up {0% {transform: rotate(270deg)}50% {transform: rotate(1turn)}to {transform: rotate(270deg)}}    @keyframes rotate_pacman_half_up {0% {transform: rotate(270deg)}50% {transform: rotate(1turn)}to {transform: rotate(270deg)}}    @-webkit-keyframes rotate_pacman_half_down {0% {transform: rotate(90deg)}50% {transform: rotate(0deg)}to {transform: rotate(90deg)}}    @keyframes rotate_pacman_half_down {0% {transform: rotate(90deg)}50% {transform: rotate(0deg)}to {transform: rotate(90deg)}}    @-webkit-keyframes pacman-balls {75% {opacity: .7}to {transform: translate(-100px, -6.25px)}}    @keyframes pacman-balls {75% {opacity: .7}to {transform: translate(-100px, -6.25px)}}    .loading-image div:nth-child(3),    .loading-image div:nth-child(4),    .loading-image div:nth-child(5),    .loading-image div:nth-child(6){        background-color: #49b1f5;        width: 15px;        height: 15px;        border-radius: 100%;        margin: 2px;        width: 10px;        height: 10px;        position: absolute;        transform: translateY(-6.25px);        top: 25px;        left: 100px;    }    .loading-text{        margin-bottom: 20vh;        text-align: center;        color: #2c3e50;        font-size: 2rem;        box-sizing: border-box;        padding: 0 10px;        text-shadow: 0 2px 10px rgba(0,0,0,0.2);    }    @media only screen and (max-width: 500px) {         .loading-text{            font-size: 1.5rem;         }    }    .fadeout {        opacity: 0;        filter: alpha(opacity=0);    }    /* logo出现动画 */    @-webkit-keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}100%{opacity:1;-webkit-transform:none;transform:none}}    @keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);}} &lt;/style&gt; &lt;script&gt;(function () {    const loaded = function(){       setTimeout(function(){            const loader = document.getElementById("loading-container");            loader.className="fadeout" ;//使用渐隐的方法淡出loading page            // document.getElementById("body-wrap").style.display="flex";            setTimeout(function(){                loader.style.display="none";            },2500);         },1000);//强制显示loading page 1s      };    loaded();})()&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-主题目录下的ejs文件中添加内容"><a href="#2-主题目录下的ejs文件中添加内容" class="headerlink" title="2. 主题目录下的ejs文件中添加内容"></a>2. 主题目录下的ejs文件中添加内容</h2><p>在主题目录<code>layout</code>下找到<code>layout.ejs</code>这个文件。</p><p>打开后在<code>&lt;body&gt;</code>标签前添加如下内容：</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;% if (theme.loadingPages.enable) { %&gt;   &lt;%- partial('_partial/loading-pages') %&gt;&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在<code>&lt;body&gt;</code>标签后添加如下内容：</p><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;% if (theme.loadingPages.enable) { %&gt;    &lt;div id="loading-container"&gt;         &lt;p class="loading-text"&gt;嘘~  正在从服务器偷取页面 . . . &lt;/p&gt;          &lt;div class="loading-image"&gt;             &lt;div&gt;&lt;/div&gt;             &lt;div&gt;&lt;/div&gt;             &lt;div&gt;&lt;/div&gt;             &lt;div&gt;&lt;/div&gt;              &lt;div&gt;&lt;/div&gt;         &lt;/div&gt;    &lt;/div&gt;&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-主题目录下-config-yml文件添加开关配置"><a href="#3-主题目录下-config-yml文件添加开关配置" class="headerlink" title="3. 主题目录下_config.yml文件添加开关配置"></a>3. 主题目录下_config.yml文件添加开关配置</h2><p>打开<code>_config.yml</code>文件，添加如下内容：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">loadingPages</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>enable</code> 设置为 <code>true</code> 表示开启加载动画， <code>false</code> 表示关闭加载动画。</p><h2 id="4-重新生成页面"><a href="#4-重新生成页面" class="headerlink" title="4. 重新生成页面"></a>4. 重新生成页面</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>原文是在：<a href="https://zhangxiaocai.cn/posts/7496029d.html#searchModal">斯莫笔记网站</a>，操作没有说的很清楚就在写了一便。</p><h2 id="5-图片添加加载动画"><a href="#5-图片添加加载动画" class="headerlink" title="5. 图片添加加载动画"></a>5. 图片添加加载动画</h2><p>安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-lazyload-image <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后在站点配置文件<code>_config.yml</code>下添加下面的代码，同时需要在<code>medias</code>文件夹下放一张<code>loading.gif</code>的图片。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 图片懒加载</span><span class="token key atrule">lazyload</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 是否开启图片懒加载</span>  <span class="token key atrule">onlypost</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 是否只对文章的图片做懒加载</span>  <span class="token key atrule">loadingImg</span><span class="token punctuation">:</span> /medias/loading.gif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>优化冲突</strong></p><p>查看大图，发现全部为loading加载图，原因是因为<strong>懒加载插件与其他插件发生了冲突</strong>。</p><p><strong>解决办法：</strong>修改主题文件下的<code>/source/js/matery.js</code>，在108行左右添加以下代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'img[data-original]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-original"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>加完后如下：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 启用字幕</span>   <span class="token literal-property property">subHtmlSelectorRelative</span><span class="token operator">:</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 懒加载防止插件冲突</span>   <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'img[data-original]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">,</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-original"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// progress bar init</span>     <span class="token keyword">const</span> progressElement <span class="token operator">=</span> window<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.progress-bar'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>progressElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">new</span> <span class="token class-name">ScrollProgress</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>                progressElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> y <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token string">'%'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token function">articleInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.modal'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">modal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-优化缓存"><a href="#6-优化缓存" class="headerlink" title="6. 优化缓存"></a>6. 优化缓存</h2><ul><li>其实第一次加载后本地都是有缓存的，如果每次都把loading显示出来就不那么好看。</li><li>所以我们需要对插件进行魔改，让图片稍微提前加载，避开加载动画。</li><li>打开 主题根目录<code>node_modules/hexo-lazyload-image/lib/simple-lazyload.js</code> 文件。</li></ul><p><strong>第19行修改为：</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 懒加载优化</span><span class="token operator">&amp;&amp;</span> rect<span class="token punctuation">.</span>top <span class="token operator">&lt;=</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerHeight <span class="token operator">+</span><span class="token number">240</span> <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight <span class="token operator">+</span><span class="token number">240</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>作用：提前240个像素加载图片；当然这个值也可以根据自己情况修改/</p>]]></content>
      
      
      <categories>
          
          <category> Hexo-matery主题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
            <tag> Optimize </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语复习</title>
      <link href="/2023/12/31/ying-yu-fu-xi/"/>
      <url>/2023/12/31/ying-yu-fu-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="英语期末复习"><a href="#英语期末复习" class="headerlink" title="英语期末复习"></a>英语期末复习</h1><h3 id="Vacubulary"><a href="#Vacubulary" class="headerlink" title="Vacubulary"></a>Vacubulary</h3><ol><li>The government troops recaptured the city from the rebels the rebels <strong>at the cost of</strong> two  thousand casualties. </li><li>My brother wasn’t badly hurt, but he injured his leg and had had to <strong>limp</strong> around for a few  weeks. </li><li>The aircraft was subjected to a test of temperatures of <strong>minus</strong> 65 degrees Celsius and plus  120 degrees. </li><li>Tax incentives combined with cheap labor will attract companies to the western <strong>regions</strong>  of our country away from the east coast. </li><li>After a three-day <strong>siege</strong> by the police, the terrorists who had seized the restaurant had to  give in. </li><li>Before Anglo-American westward <strong>expansion</strong>, there were already a number of settlements  in the mid-West. </li><li>Warmer air is able to hold more water <strong>vapor</strong> than cold air and so has a higher humidity. </li><li>The thunder crashed so near the house that the glass <strong>vibrated</strong> in the windows. and some  books, which had sat on the windowsill fell to the floor. </li><li>From the control tower, air traffic controllers coordinate aircraft movement both <strong>in the air</strong>  and on the ground. </li><li>In 1978, at the beginning of the reform period, <strong>approximately</strong> 11000 Chinese students  went abroad to pursue further studies. </li><li>The waitress was so <strong>rude</strong> that Jane didn’t tip her. </li><li>Racing takes everything you’ve got - intellectually, emotionally, and <strong>physically</strong>. </li><li>Although the <strong>structure</strong> of the building hasn’t suffered, the surface is badly damaged. </li><li>She received an increase in pay and it has <strong>made a difference</strong> her attitude towards work. </li><li>Salespeople often try to learn about the needs of the <strong>prospective</strong> buyer to make  themselves more persuasive. </li><li>To reduce weight, I am now learning to play golf with my business <strong>partner</strong>, who plays like  a professional. </li><li>The general ordered his troops to move quickly towards a(n) <strong>advantageous</strong> position. </li><li>The tower built at the turn of the century became a <strong>land mark</strong> the city. </li><li>In a book <strong>entitled</strong> A Short History of Nearly Everything, Bill Bryson tries to ignite (激起) a passion for knowledge in young readers. </li><li>It seems neuroscience (神经系统科学) is threatening to <strong>displace</strong> physics as the queen of  the sciences. </li><li>What Ann advocates just shows how <strong>divorced</strong> from reality she has become. </li><li><strong>In a way</strong> I prefer shopping online because it is more convenient and saves time. </li><li>If you are over 18 and <strong>in good condition</strong>, it’s completely safe to do the job. </li><li>Plastics can be made hard as stone, strong as steel, <strong>transparent</strong> as glass, and light as  wood. </li><li>Coat the shoes with polish (擦亮剂) ,then <strong>rub</strong> hard with a soft cloth to give a shine. </li><li>In order to pay the bills, Linda <strong>pawned</strong> her grandfather’s gold watch in secret. </li><li>To stimulate consumption, farmers now can buy household <strong>appliances</strong> with government  subsidy. </li><li>The town has been producing wool, cloth, and blankets since the 13th century and much  of its <strong>prosperity</strong> today is still founded on those industries. </li><li>I’ll send you a <strong>fax</strong> with detailed information about the proposed project. </li><li>It was Deng Xiaoping who <strong>pointed the way</strong> to our opening-up policy and fundamental  economic reforms.</li></ol><h3 id="Translation"><a href="#Translation" class="headerlink" title="Translation"></a>Translation</h3><ol><li>多尔蒂先生和他的家人目前正在农场忙于秋收。</li></ol><p><strong>Mr. Doherty and his family are currently engaged in getting the autumn harvest in on the farm.</strong></p><ol start="2"><li>菲尔已三个月没有找到工作了，正变得越来越绝望。</li></ol><p><strong>Having been out of a job for 3 months, Phil is getting increasingly desperate.</strong></p><ol start="3"><li>作为项目经理，山姆办事果断，工作效率高，且判断准确。</li></ol><p><strong>Sam, as the project manager, is decisive, efficient, and accurate in his judgment.</strong></p><ol start="4"><li>空气中有一种不同寻常的寂静，只有远处响着大炮的声音。</li></ol><p><strong>There was an unusual quietness in the air, except for the sound of artillery in the distance.</strong></p><ol start="5"><li>研究表明大气中二氧化碳的含量与全球温度密切相关。</li></ol><p><strong>The research shows that atmospheric carbon dioxide levels are closely correlated with global temperatures.</strong></p><ol start="6"><li>最近公共汽车的车辆行驶频率已有改善，从15分钟缩短到12分钟一班。</li></ol><p><strong>The frequency of the bus service has been improved from 15 to 12 minutes recently.</strong></p><ol start="7"><li>在记者反复追问下，该影星终于说漏了嘴，承认自己做过两次整容手术。</li></ol><p><strong>Grilled by the reporters, the movie star eventually blurted that she had undergone two plastic surgeries.</strong></p><ol start="8"><li>我们有技术，我们的合伙人有资金。一起干，我们就掌握了未来。</li></ol><p><strong>We have the technology and our partner has the capital. Working together, we’ll have the future in our hands.</strong></p><ol start="9"><li>当人们得知地震灾区将要建造结构更牢固的新校舍时，纷纷慷慨解囊。</li></ol><p><strong>People gave generously upon learning that new school rooms with stronger structures were to be built in the earthquake-stricken area.</strong></p><ol start="10"><li>我喜欢雇佣年轻人。他们愿意学习，而且忠于职守。</li></ol><p><strong>I like hiring young people. They are earnest learners and committed to work.</strong></p><ol start="11"><li>玛丽和她那些以自己孩子为中心的女友们不同，更在意个人成长。</li></ol><p><strong>Unlike her girl friends who center their lives on their children, Mary cares more about her personal growth.</strong></p><ol start="12"><li>中国政府出台了一系列政策以加强同发展中国家之间的合作。</li></ol><p><strong>The Chinese government has introduced a varitey of policies to strengthen cooperation with developing countries.</strong></p><ol start="13"><li>即使置身于一个嘈杂的环境中，他也能坚持做手头的工作。</li></ol><p><strong>He is capable of sticking to the task at hand, even if he is exposed to noises.</strong></p><ol start="14"><li>老师那充满关爱的话语，以及坦诚的评价改变了迈克对社会和他自己的看法。</li></ol><p><strong>The teacher’s affectionate words, along with his candid comments, changed the way Mike perceived the society and himself.</strong></p><ol start="15"><li>中央电视台的定时天气预报使得我们旅行时不管走到哪儿都能知道天气的变化。</li></ol><p><strong>The regular weather forecast by the Central TV Station keeps us up with the changes of weather wherever we go on a trip.</strong></p><h3 id="Cloze"><a href="#Cloze" class="headerlink" title="Cloze"></a>Cloze</h3><p><strong>第一篇</strong></p><p> When Hitler decided to launch his <strong>invasion</strong> (1) of Russia, he thought that nothing could  <strong>stand in the way</strong> (2) of his armies. <strong>Conquest</strong> (3), It seemed, was inevitable. He had surprise  on his side, <strong>catching</strong> Stalin <strong>off his guard</strong> (4) by <strong>launching</strong> (5) his attack without a  <strong>declaration</strong> (6) of war. Hitler expected the <strong>campaign</strong> (7) to last only a few months . In the  event, it was to <strong>drag on</strong> (8) for much longer. Like Napoleon before him, he had made a  fatal mistake in failing to <strong>reckon with</strong> (9) the severity of the Russian weather. Many German  soldiers were to die from the cold as winter set in, <strong>bringing</strong>  the German advance <strong>to  a half.</strong> (10)</p><p><strong>译文：</strong><br>当希特勒决定对俄国发动侵略时，他认为没有什么能阻挡他的军队。征服似乎是不可避免的。他出其不意，在没有宣战的情况下发动进攻，打了斯大林一个措手不及。希特勒预计这场战役只会持续几个月。但结果却拖了更长的时间。和之前的拿破仑一样，他也犯了一个致命的错误，那就是没有估计到俄罗斯天气的恶劣程度。随着冬天的到来，许多德国士兵死于寒冷，使德军的推进速度减半。</p><p><strong>第二篇</strong></p><p>Can you <strong>switch off</strong> (1) from the cares of life and relax? Many people today cannot. They fcel instead that they are <strong>obliged</strong> (2) to be <strong>on the go</strong> (3) all the time. The pace of life seems to grow ever faster. As a result, feclings of stress are common as people struggle to <strong>cope with</strong> (4) what they see as a <strong>shortage</strong> (5) of time. Such widespread feelings are in part caused by the <strong>large guantity of</strong> (6) information that comes <strong>pouring in</strong> (7) on us. “All men,” said Aristotle, “<strong>by nature</strong> (8) desire to know.” But it is no longer possible, as it was in the past, for an individual to master      the whole range of human knowledge. Instead, any individual, no matter how smart he is, can   only command <strong>a fraction of</strong> (9) the total knowledge available. It may be argued that it is <strong>futile</strong> (10) to even attempt to do so. We should learn to set more realistic goals for ourselves if we are to hope to escape from the tyranny of time.</p><p><strong>译文：</strong></p><p>你能从生活的琐事中抽身并放松下来吗？现在很多人都做不到。相反，他们认为自己有义务时时刻刻 与地球保持同步。生活节奏似乎越来越快。因此，当人们努力应对他们所认为的时间短缺时，压力感便屡见不鲜。造成这种普遍感受的部分原因是，大量信息纷至沓来。亚里士多德说：”人的本性都渴望了解”。但是，现在已经不可能像过去那样，让一个人掌握人类的全部知识。相反，任何一个人，无论他多么聪明，都只能掌握全部知识的一小部分。可以说，即使试图这样做也是徒劳的。如果我们希望摆脱时间的暴政，就应该学会为自己设定更现实的目标。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://pic.imgdb.cn/item/65914522c458853aefee219a.jpg" alt="随心" title="随心"></p>]]></content>
      
      
      <categories>
          
          <category> 复习文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> review </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新媒体网络营销复习</title>
      <link href="/2023/12/30/xin-mei-ti-wang-luo-ying-xiao-fu-xi/"/>
      <url>/2023/12/30/xin-mei-ti-wang-luo-ying-xiao-fu-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="新媒体营销复习"><a href="#新媒体营销复习" class="headerlink" title="新媒体营销复习"></a>新媒体营销复习</h1><h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><ol><li><strong>新媒体营销</strong></li></ol><p><strong>新媒体营销是指企业或个人利用新媒体平台的功能特性，精心策划具有高度传播性的内容和线上活动。通过向用户广泛、精准的推送消息，以提高品牌知名度和用户参与度，从而达到相应的营销目的。</strong></p><ol start="2"><li><strong>新媒体内容营销</strong></li></ol><p><strong>新媒体内容营销是指企业营销人员利用新媒体渠道，以文字、图片、音频或视频等形式，将与企业有关的信息友好地呈现在用户面前，并激发用户参与、分享、传播的完整活动过程。</strong></p><ol start="3"><li><strong>微信朋友圈营销</strong></li></ol><p><strong>朋友圈营销是指企业或个人将微信朋友圈作为宣传推广平台，潜移默化的影响朋友圈好友，通过品牌宣传、产品展示、实景案例分享、团队文化输出、个人形象品牌建立等活动，赢得目标用户的信任和喜爱，进而增加转化，实现营销的目的。</strong></p><ol start="4"><li><strong>社群营销</strong></li></ol><p><strong>社群营销就是基于社群成员间相同或相似的兴趣爱好，利用某种载体聚集人气，通过产品或服务满足群体需求而产生的商业形态。社群营销的载体不局限于微信及各种平台，线下的平台和社区都可以做社群营销。</strong></p><ol start="5"><li><strong>网络视频</strong></li></ol><p><strong>网络视频是指由网络视频服务商提供的，以流媒体为播放格式的，可以在线直播或点播的声像文件。在网络上以WMV、RM、RMVB、FLV及MOV等视频文件格式为主，包括各类影视节目、新闻、广告、Flash动画、自拍DV、聊天视频、游戏视频、监控视频等。</strong></p><ol start="6"><li><strong>自媒体</strong></li></ol><p><strong>自媒体又称公民媒体或个人媒体，是指私人化、平民化、普泛化、自主化的传播者以现代化、电子化的手段，向不特定的大多数或特定的单个人传递规范性及非规范性信息的新媒体的总称。</strong></p><ol start="7"><li><strong>自媒体营销</strong></li></ol><p><strong>自媒体营销是指利用今日头条、百度百家号、搜狐、凤凰、UC等平台或其它互联网协作平台和媒体来传播和发布资讯，从而形成的营销、销售、公共关系处理和客户关系服务维护及开拓的一种营销方式。</strong></p><ol start="8"><li><strong>微电影营销</strong></li></ol><p><strong>微电影营销是指通过拍摄短片，轻松自然的将品牌信息融入故事情节中，通过故事主人公的‘事与情’升华，突出表现主体，引发受众的情感共鸣，达到其品牌理念推广与品牌精神传达的目的。</strong></p><h3 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h3><p><strong>一、新媒体营销的形式</strong></p><ol><li>微信营销</li><li>微博营销</li><li>社群营销 </li><li>网络视频营销</li><li>自媒体营销</li><li>知识平台营销</li><li>娱乐媒体平台营销</li></ol><p><strong>二、新媒体用户分析的要素</strong></p><ol><li>用户的人口属性</li><li>用户的心理现象</li><li>用户的行为属性</li><li>用户的社交属性</li></ol><p><strong>三、新媒体用户分析的方法</strong></p><ol><li>大数据分析：主要是指营销人员利用后台进行用户分析。</li><li>小样本分析</li><li>抽样调查分析</li><li>综合分析</li></ol><p><strong>四、新媒体内容策划</strong></p><ol><li><strong>内容定位：企业要为哪一个细分人群服务？企业能解决哪一个细分需求？</strong></li><li><strong>内容产量：内容的产量是指企业团队发文的数量和质量，不要一昧的追求每日更新数量，质量上乘才是关键。</strong></li><li><strong>内容形式：企业新媒体发文的形式多种多样，有文字、视频、音频、图片等形式。</strong></li><li><strong>内容来源：新媒体一般的内容来源有企业营销人员原创、采访素材、整合资料、用户投稿、转载内容等。</strong></li><li><strong>内容调性：追求人格化。新媒体内容一般会创设一个用户喜欢的人格化角色，并一直沿用下去，在语言特点、内容风格和价值取向方面突出自己个性化的标签，尽量避免与同类型账号雷同。</strong></li></ol><p><strong>五、新媒体数据分析的意义</strong></p><ol><li>通过数据分析了解营销与运营的质量</li><li>通过数据分析预测营销与运营的方向</li><li>通过数据分析控制营销与运营的成本</li><li>通过数据分析评估营销方案</li></ol><p><strong>六、新媒体营销的目的</strong></p><ol><li>提升营销数据</li><li>提升品牌美誉度</li><li>提升品牌知名度</li><li>提升品牌忠诚度</li></ol><p><strong>七、微博的特点</strong></p><ol><li>便捷性 </li><li>创新交互方式。在微博平台上用户之间不一定要相互加为好友，只需要关注对方，成为对方的粉丝，就可以随时随地的接收被关注者发布的信息，这一特性被称为背对联。</li><li>原创性</li><li>草根性</li><li>宣传影响力弹性大</li></ol><p><strong>八、微博营销的任务</strong></p><ol><li><strong>传递产品信息。很多企业通过微博发布产品信息，吸引粉丝购买。</strong></li><li><strong>进行互动营销。互动营销意味着企业与粉丝之间有了更多近距离的交流。</strong></li><li><strong>进行用户服务。利用微博开展在线用户服务的优点主要包括成本低、服务方式灵话、传播效应强等，非常符合现代用户，尤其是年轻用户群体的需求。</strong></li><li><strong>进行舆情检测。舆情管理对企业来说至关重要，不仅可为企业经营过程中产品和服务内容的定位提供参考，更可使企业趋利避害，减轻负面舆论的压力，强化正向品牌力量。</strong></li><li><strong>进行危机公关。企业在发生危机后及时通过微博发布信息，可以减少相关猜测，有效地提高危机公关的效率。</strong></li></ol><p><strong>九、微信营销的特点</strong></p><p>1、点对点精准营销</p><p>2、形式多样</p><p>3、曝光率高：微信公众平台信息的到达率是100%</p><p><strong>十、社群营销的特点</strong></p><ol><li><strong>弱中心化。社群营销是扁平化网状结构，人们可以一对一或多对多地实现互动，进行信息传播，在社群里，并不是只有一个组织和一个有话语权的人，而是每个人都能说，这使传播主题从单一走向扩散，这也是一个弱中心化的过程。</strong></li><li><strong>多项互动化。社群营销通过社群成员之间的互动交流，包括信息和数据的平等互换，使每一成员都成为信息的发送者，同时又成为接收者和分享者。</strong></li><li><strong>具有情感优势。社群都是由有共同爱好、兴趣而聚集在一起的人组成的，因此，成员间很容易建立起情感联系。</strong></li><li><strong>自行运转。由于社群的特性，社群在一定程度上可以自我运行、创造、分享，甚至进行各种产品和价值的生产与再生产。</strong></li><li><strong>碎片化。社群的资源性和多样性特点，使社群营销呈现出多样化、信息发布方式分散的特点，这就意味着社群营销呈现碎片化的趋势。</strong></li></ol><p><strong>十一、如何进行社群新人的培育？</strong></p><ol><li>明确培养目标，制定不同的方案。</li><li>充分授权，鼓励新人承担重任。</li><li>教练带领，考核升级。</li></ol><p><strong>十二、网络视频营销的趋势</strong></p><ol><li>品牌视频化：很多广告主将品牌广告通过网络视频展现出来</li><li>视频网络化</li><li>广告内容化</li></ol><p><strong>十三、网络视频营销活动方式</strong></p><ol><li><strong>影视节目二次传播。由于网络视频网站对传统电视观众的分流，很多具有新闻性、可欣赏性的电视节目由视频网站、网民或意见领袖主动发布到视频网站平台再次传播。</strong></li><li><strong>网络视频短剧。网络视频短剧剧情轻松，演员、导演年轻化，整体风格时尚、简洁、幽默、贴近生活，尤其受到年轻一代的喜欢，成为行业新的增长点。视频短剧符合互联网风格，制作灵活，软性宣传效果好，也逐渐受到品牌方的青睐。</strong></li><li><strong>视频病毒式营销。病毒式营销是通过网民的口碑宣传，让信息像病毒一样传播和扩散，利用快速复制的方式传向数以百万计的受众。</strong></li><li><strong>微电影。微电影即微型电影，是指能够通过互联网新媒体平台进行传播的时长在几分钟~60分钟的影片，适合网民处于移动状态和短时休闲状态时观看，具有完整故事情节的短片。</strong></li><li><strong>用户生成内容。UGC是指终端用户将其原创内容通过互联网平台进行展示或与其他用户进行共享的行为。</strong></li></ol><p><strong>十四、网络视频制作的种类</strong></p><ol><li>企业宣传片</li><li>产品宣传片</li></ol><p><strong>十五、自媒体的特征</strong></p><ol><li><strong>个性化。是最显著的一个特征</strong></li><li><strong>碎片化。自媒体的“碎片化”也决定了其张扬自我、个行成长以及规模庞大的行业特点。</strong></li><li><strong>交互性</strong></li><li><strong>多媒体</strong></li><li><strong>群体性</strong></li><li><strong>传播性：让公众记录了每个人面前都有话筒的时代是传播性</strong></li></ol><p><strong>十六、自媒体平台盈利模式</strong></p><ol><li>自媒体+平台</li><li>自媒体+广告</li><li>自媒体+付费阅读</li><li>自媒体+电商</li><li>自媒体+IP</li><li>自媒体+活动</li></ol><p><strong>十七、制作内容创意简报要梳理三个问题</strong></p><p><strong>1.</strong>  <strong>向谁说：who</strong></p><p><strong>2.</strong>  <strong>说什么：what</strong></p><p><strong>3.</strong>  <strong>在哪说：where</strong></p><p><strong>十八、问答平台的类型</strong></p><ol><li>综合型问答平台</li><li>垂直型问答平台</li></ol><p><strong>十九、问答平台营销的优势</strong></p><ol><li><strong>自然排名好。问答平台在各自的大平台里的资料搜索排名都比较好，用户比较容易在搜索引擎首页看到企业的问答内容。</strong></li><li><strong>信息覆盖面广。信息投放平台覆盖了95%以上的互联网用户，受众比较广泛。</strong></li><li><strong>品牌营销精准。问答平台上的解答阐述了用户想要了解的信息，企业可以把每个问题看作一个长尾关键词，把回复看作一个问题引导，企业就可以利用这个回答把用户精准地引导到品牌网站</strong></li><li><strong>快速建立良好的口碑。用户自己根据需求有针对性地提出问题，企业可根据用户的需求去做专业的回答。</strong></li><li><strong>迅速提升品牌可信度。因为问答推广是在真实语境下进行的，提问者和回答者之间存在互动，而回答者一般是以“过来人”的身份去回答提问者的问题的，答案更具有可信度；同时，回答者代表的是企业品牌，其回复可以提升品牌的可信度。</strong></li></ol><p><strong>二十、知识付费的形态</strong></p><ol><li>图文</li><li>音频</li><li>视频</li><li>社群</li><li>直播</li></ol><p><strong>二十一、 知识付费的优势</strong></p><ol><li>收益稳定：是指内容付费的人群十分稳定，多为愿意为优质内容付费的优质客户</li><li>用户的留存率和粘性高</li><li>产生正向循环</li></ol><p><strong>二十二、网络直播的盈利模式</strong></p><ol><li>时薪</li><li>礼物</li><li>衍生副业</li></ol><p><strong>二十三、直播营销平台选择</strong></p><ol><li>平台流量</li><li>平台收入</li><li>平台运营能力</li></ol><p><strong>二十四、用户对标题的心理需求</strong></p><ol><li>好奇需求</li><li>情感需求</li><li>私心需求</li><li>娱乐需求</li><li>价值需求</li><li>关怀需求</li></ol><h3 id="选择或判断"><a href="#选择或判断" class="headerlink" title="选择或判断"></a>选择或判断</h3><ol><li>新媒体从内容来看，新媒体既可以传播文字，也可以传播声音和图像。</li><li>新媒体和传统媒体的区别，<strong>传统媒体</strong>由报纸、杂志、广播、电视等，<strong>它是针对于用户群体（某一类区分)。</strong>新媒体的传播方式是针对精准化用户的需求。</li><li>互联网电视用户超越传统电视用户的重要行为特征是新媒体用户的使用行为较高。</li><li>新媒体内容，<strong>内容</strong>是一切用户行为的入口，同时也是获取用户信任的第一步，它也是重要性界定。</li><li>新媒体内容创作的三个标准，<strong>一、专业性，二、趣味性，三、新闻性。</strong></li><li>微博一般没有特别说明的，就是指新浪微博。</li><li>粉丝趋势分析和粉丝来源分析区别：</li></ol><ul><li><p>粉丝趋势分析：是指分析可以帮助营销人员了解在选定的时间段内微博账号每天粉丝数量的变化趋势，包括粉丝总总数、粉丝增加数、粉丝减少数、粉丝增长率以及主动取关粉丝数的变化趋势。</p></li><li><p>粉丝来源分析：主要是了解官方微博账号下的粉丝是通过哪些方式和渠道知晓并关注此账号的。</p></li></ul><ol start="8"><li>微信是腾讯公司。</li><li>社群与社区的区别，<strong>社群是熟人社交和强关系，社区是陌生人社交和弱关系。</strong></li><li>建立强关系，就是社群成员之间至少建立<strong>两个维度</strong>的连接。</li><li>社群运营绩效评价：<strong>结果导向型KPI；过程导向型KPI。</strong></li><li>社群合作变现：常见的有换粉互推、资源交换、合作产品。</li><li>营销策略设计原则：<strong>突出个性，差别化运营。</strong></li><li>头条运营推广的技巧是：晚上发文最好。</li><li>视频直播：是指在现场随着事件的发生、发展进程同时制作和播出视频的方式，相当于网络电视。</li><li>直播营销是一场事件营销。</li><li>微电影营销的优势，广告电影化：微电影作为一种全新的电影文化，能更好的诠释品牌理念，未来有可能会取代电影植入。</li><li>新媒体时代的<strong>“耳朵经济”指的是网络音频</strong>。</li><li>明确文章标题的作用是圈定目标读者，提高文章转发量。</li><li>情感型标题是指运营者将个人的生活情感融入标题之中，从而与读者产生共鸣。</li><li><strong>运用引导法创作文章标题的类型：经历型、情感型、情景型、故事型、玄机型、对比型。</strong></li><li><strong>运用表达法创造文章标题的类型：悬念型、隐喻型、问答型。</strong></li><li>隐喻型：在文章标题中采用比喻的手法进行标题的创作。隐喻行标题有很多妙处，能够使文章更新颖，更具创意，从而给读者留下深刻的印象，引起读者阅读的兴趣和好感。</li><li><strong>运用“式”字法创造文章标题的类型：集合式、半遮掩式、揭露式。</strong></li><li>半遮掩式标题是指通过标题向读者传递文章内容，但只透露部分，不说完全，给读者留下小悬念，引起读者的兴趣，又不直接告诉读者。</li><li>揭露式标题是指一种为读者揭露某件事物或不为人知的秘密的标题。大部分人都会有好奇心，而这种标题则恰好可以抓住读者的这种心理。</li><li>一个优秀、吸引人眼球的头像，能够胜过千言万语。</li><li>图片内容编排：是指平台推送的整篇文章中，其内容都是以图片形式表达的，没有文字或文字已经包含在图片里面了。</li><li><strong>金字塔原理：是以思考的逻辑、表达的逻辑、演示的逻辑为核心的一个挖掘受众需求点，确定想要说清的内容，选择基本结构，进行规范动作的过程。</strong></li></ol><h3 id="课前阅读"><a href="#课前阅读" class="headerlink" title="课前阅读"></a>课前阅读</h3><p>课前阅读   P57</p><p><strong>一、你觉得褚橙热销的原因有哪些？</strong></p><ol><li><strong>微博推动——本来生活发起的，网络大V转发，轰动了中国人的味觉！</strong></li><li><strong>传播因素——农产品的趣味性、人文和温度；互联网的传播力+用户社群化。</strong></li><li><strong>内容劲爆——人物+产品老企业家、古稀之年在创业、人生故事。</strong></li><li><strong>品牌价值——象征、意境、文化、个性、精神、价值观、使命。</strong></li></ol><p><strong>二、你怎样评价这一营销现象？</strong></p><ol><li><strong>微博传播力、影响力巨大</strong></li><li><strong>好的内容是叙事和创意的结合</strong></li><li><strong>价值话题是传播的正确打开方式</strong></li><li><strong>社群转化是微博营销的重要环节</strong></li></ol><p>课前阅读  P106</p><p>一、你觉得小米社群营销成功的原因有哪些？</p><ol><li>微博吸引粉丝——微博用户量大，又有众多电子技术爱好者。通过大量宣传推广，将聚集了早期的忠实用户。</li><li>论坛维护活跃度——论坛发布技术革新、功能改进，及时采纳用户意见，又促进粉丝之间传播。</li><li>微信做客服——微信是一个强关系应用，微信上互相加为好友、互相认识的人，至少都是你通讯录上的人，沟通效果非常好。</li><li>营销效果——用户参与感增强、体验度高、人人都是客服的工作状态，使得小米在亲民上有更多的优势。</li></ol><p>二、你怎样评价这一营销现象？</p><ol><li>社群成员交流更充分、传播更具可信度。</li><li>社群成员因产品、兴趣、爱好结合在一起。</li><li>社群成员的参与度和创造力就能制造惊喜。</li><li>社群内部资源多种多样。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 复习文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> review </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>马原复习</title>
      <link href="/2023/12/29/ma-yuan-fu-xi/"/>
      <url>/2023/12/29/ma-yuan-fu-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="马原知识要点"><a href="#马原知识要点" class="headerlink" title="马原知识要点"></a>马原知识要点</h1><h3 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h3><p>一、马克思主义创立的条件及标志  P4-7</p><ul><li><p>德国古典哲学，英国古典政治经济学，英法空想社会主义为马克思主义的创立提供了直接的理论来源</p></li><li><p>法国、英国、德国工人运动的兴起，标志着现代无产阶级作为独立的政治力量登上了历史舞台。</p></li></ul><p>二、马克思的两个伟大发现  P7</p><p>唯物史观和剩余价值学说是马克思一生的两个伟大发现。</p><p>三、马克思主义中国化时代化及其理论成果 P10</p><p>坚持毛泽东思想，邓小平理论，三个代表重要思想，科学发展观。</p><p>四、马克思主义的基本特征  P13 </p><p>马克思主义具有鲜明的科学性，人民性，实践性，发展性。</p><h3 id="第1章-世界的物质性及发展规律"><a href="#第1章-世界的物质性及发展规律" class="headerlink" title="第1章  世界的物质性及发展规律"></a>第1章  世界的物质性及发展规律</h3><h4 id="第1节-世界的多样性与物质统一性"><a href="#第1节-世界的多样性与物质统一性" class="headerlink" title="第1节  世界的多样性与物质统一性"></a>第1节  世界的多样性与物质统一性</h4><p>一、唯物主义的三种历史形态  P27</p><p>古代朴素唯物主义、近代形而上学唯物主义、马克思主义的物质范畴。</p><p>二、物质的存在方式和根本属性  P30</p><ul><li>物质的根本属性是运动</li><li>物质是运动着的物质离开物质的运动和离开运动的物质都是不存在的</li><li>时间和空间是运动着的物质的基本存在形式</li><li>时间特点是一维性  空间特点是三维性</li></ul><p><strong>3.</strong> <strong>人工智能不能超越和取代人类智能及其原因  P36-38</strong></p><ul><li><p><strong>第一，人类意识是知情意的统一体，而人工智能只是对人类的理性智能的模拟和扩展，不具备情感、信念、意志等人类意识形式</strong></p></li><li><p><strong>第二，社会性是人的意识所固有的本质属性，而人工智能不可能真正具备人类的社会属性</strong></p></li><li><p><strong>第三，人类的自然语言是思维的物质外壳和意识的现实形式，而人工智能难以完全具备理解自然语言真实意义的能力</strong></p></li><li><p><strong>第四，人工智能能够获得人类意识中可以化约为数字信号的内容，但人脑中总有许多东西是无法被化约的</strong></p></li></ul><h4 id="第2节-事物的普遍联系和变化发展"><a href="#第2节-事物的普遍联系和变化发展" class="headerlink" title="第2节  事物的普遍联系和变化发展"></a>第2节  事物的普遍联系和变化发展</h4><p>一、唯物辩证法的总特征  P40</p><p>联系和发展的观点是唯物辩证法的总观点，集中体现了唯物辩证法的总特征。</p><p>二、如何区别新旧事物  P42</p><p>不是指事物发生的一切改变，发展则是事物变化中前进的，上升的运动新事物之所以新，是因为有新的要素结构和功能，它适应已经变化了的环境和条件。旧事物之所以旧是因为它的各种要素和功能已经不适应环境和客观条件的变化，走向灭亡就成为不可避免的。</p><p>三、矛盾的同一性（含义）P44</p><p><strong>矛盾的同一性是指矛盾着的对立面相互依存，相互贯通的性质和趋势有两个方面的含义：</strong></p><ul><li><strong>一是矛盾着的对立面相互依存，互为存在的前提，并共处于一个统一体中；</strong></li><li><strong>二是矛盾着的对立面相互贯通，在一定条件下可以相互转化。</strong></li></ul><p>矛盾两种基本形式，对抗性矛盾和非对抗性矛盾</p><p>四、<strong>“两点论”和“重点论”相统一  P46</strong></p><ol><li><strong>把主要矛盾和次要矛盾、矛盾的主要方面和次要方面的辩证关系运用到实际工作中，就是要坚持两点论和重点论的统一。</strong></li><li><strong>两点论是指在分析事物的矛盾时，不仅要看到矛盾双方的对立，而且要看到矛盾双方的统一，不仅要看到矛盾体系中存在主要矛盾，矛盾的主要方面，而且要看到次要矛盾，矛盾的次要方面。</strong></li><li><strong>重点论是指要着重把握主要矛盾、矛盾的主要方面，并以此作为解决问题的出发点。</strong></li><li><strong>两点论和重点论的统一要求我们，看问题既要全面的看，又要看主流、大势、发展趋势。</strong></li></ol><p>五、矛盾分析方法是认识世界和改造世界的根本方法  P57</p><p>矛盾分析法是我们认识事物的根本方法。矛盾分析法的核心要求是善于分析矛盾的特殊性。</p><h3 id="第2章-实践与认识及其发展规律"><a href="#第2章-实践与认识及其发展规律" class="headerlink" title="第2章  实践与认识及其发展规律"></a>第2章  实践与认识及其发展规律</h3><h4 id="第1节-科学的实践观及其意义"><a href="#第1节-科学的实践观及其意义" class="headerlink" title="第1节  科学的实践观及其意义"></a>第1节  科学的实践观及其意义</h4><p>一、科学实践观的创立  P70</p><p>在《关于费尔巴哈的提纲》这个文件中，马克思揭示了科学实践观的基本内容。</p><p>二、实践主客体的三种关系  P76</p><p>实践的主体和客体相互作用的关系包括实践关系，认识关系和价值关系。</p><p>其中，实践关系是最根本的关系。主体对客体的认识和改造，说到底是为了满足自己的需要，因而又构成了价值关系。</p><p>三、实践的三种形式  P77</p><ol><li>物质生产实践。物质生产实践是人类最基本的实践活动。</li><li>社会政治实践。</li><li>科学文化实践。</li></ol><p><strong>四、实践对认识的决定作用  P79</strong></p><ul><li><p><strong>第一，实践是认识的来源。</strong></p></li><li><p><strong>第二，实践是认识发展的动力。</strong></p></li><li><p><strong>第三，实践是认识的目的。</strong></p></li><li><p><strong>第四，实践是检验认识真理性的唯一标准。</strong></p></li></ul><p>五、感性认识的特点  P84</p><p>直接性，具体性是感性认识的突出特点。</p><p>六、感性认识和理性认识的辩证统一关系P85</p><p>第一，理性认识依赖于感性认识</p><p>第二，感性认识有待于发展和深化为理性认识</p><p>第三，感性认识和理性认识相互渗透，相互包含</p><p><strong>七、实践与认识的运动为什么说它“既完成了，又没有完成”  P89</strong></p><p><strong>说它完成了是针对具体事物的认识而言的，在由认识到实践飞跃的这个阶段，如果能够实现预期目的，预想的思想、理论、计划、和方案在实践中变为事实或大体变为事实，那么人们对于在某一发展阶段内的某一客观过程的认识运动就可以算是完成了</strong>。</p><p><strong>说它又没有完成，是针对实践和认识运动过程的向前推移，向前发展而言的人们的实践是向前推移，向前发展的人们的认识运动也应随之推移和发展。经过由实践到认识，再由认识到实践这样的多次反复，某一思想理论计划和方案在实践中达到了预期的结果，这只是对于某一个别事物或某一类事物的认识运动而言</strong>。</p><h4 id="第2节-真理与价值"><a href="#第2节-真理与价值" class="headerlink" title="第2节  真理与价值"></a>第2节  真理与价值</h4><p>一、真理的客观性  P93</p><p>真理的客观性决定了真理的一元性。</p><p>二、价值的基本特征  P103</p><p>价值具有主体性，客观性，多维性和社会历史性四个基本特征。</p><p>三、真理尺度与价值尺度  P108</p><ul><li>实践的真理尺度是指在实践中人们必须遵循正确反映客观事物本质和规律的真理。</li><li>实践的价值尺度是指在实践中人们都是按照自己的尺度和需要去认识世界和改造世界。这一尺度体现了人的活动的目的性</li></ul><h4 id="第3节-认识世界和改造世界"><a href="#第3节-认识世界和改造世界" class="headerlink" title="第3节  认识世界和改造世界"></a>第3节  认识世界和改造世界</h4><p><strong>一、认识世界和改造世界的辩证关系  P110</strong></p><ol><li><p><strong>认识世界和改造世界是相互依赖，相互制约的辩证统一关系。</strong></p></li><li><p><strong>认识世界有助于改造世界，正确认识世界是有效改造世界的必要前提；</strong></p></li><li><p><strong>另一方面，人们只有在改造世界的实践中才能不断的深化、拓展对世界的正确认识。</strong></p></li></ol><p>二、守正和创新的含义  P118</p><p>所谓守正，就是坚持实事求是，坚持真理性认识，坚持正确政治方向</p><p>所谓创新，就是坚持解放思想，破除与客观事物进程不相符合的旧观念、旧模式、旧做法，发现和运用事物的新联系、新属性、新规律，更有效地认识世界和改造世界。</p><p><strong>三、努力实现理论创新和实践创新的良性互动（辩证关系）P119-120</strong></p><ol><li><strong>实践创新为理论创新提供不竭的动力源泉</strong></li><li><strong>理论创新为实践创新提供科学的行动指南</strong></li><li><strong>理论创新和实践创新不是孤立进行的，而是在与另一方面的互动中完成的，二者相互促进、辩证统一，不断实现更高阶段的创新发展。</strong></li></ol><h3 id="第3章-人类社会及其发展规律"><a href="#第3章-人类社会及其发展规律" class="headerlink" title="第3章  人类社会及其发展规律"></a>第3章  人类社会及其发展规律</h3><h4 id="第1节-社会存在与社会意识"><a href="#第1节-社会存在与社会意识" class="headerlink" title="第1节  社会存在与社会意识"></a>第1节  社会存在与社会意识</h4><p>一、意识形态的分类  P127</p><ul><li><p>根据不同的主体，社会意识可分为个体意识和群体意识。</p></li><li><p>根据不同的层次，社会意识可分为社会心理和社会意识形式。</p></li></ul><p>二、社会基本矛盾  P132</p><p>生产力与生产关系、经济基础与上层建筑之间的矛盾，是人类社会基本矛盾。</p><p>三、生产关系中的生产资料所有制  P134</p><p>生产关系包括生产资料所有制关系、生产中人与人的关系和产品分配关系。在生产关系中，生产资料所有制关系是最基本的。</p><p>四、生产力以及生产关系构成要素  P133</p><p>生产力是结构复杂的系统，其基本要素包括：一劳动资料，二劳动对象，三劳动者。</p><ul><li><p>劳动者是生产力中最活跃的因素。</p></li><li><p>科学技术是生产力中的重要因素。</p></li><li><p>科学技术是先进生产力的集中体现和主要标志，是第一生产力。</p></li></ul><p>五、国家  P138</p><p>国家的实质是一个阶级统治另一个阶级的工具。</p><p>国家是一种具有政治统治和社会管理职能的有组织的力量。</p><p><strong>6.</strong> <strong>交往的类型、作用  p142</strong> </p><p><strong>交往类型：</strong></p><ol><li><strong>可以将交往划分为物质交往和精神交往</strong></li><li><strong>物质交往是精神交往的基础和根源，精神交往是物质交往的产物，渗透于物质交往之中。</strong></li></ol><p><strong>交往作用：</strong></p><ol><li><strong>促进生产力的发展</strong></li><li><strong>促进社会关系的进步</strong></li><li><strong>促进文化的发展与传播</strong></li><li><strong>促进人的全面发展</strong></li></ol><h4 id="第2节-社会历史发展动力"><a href="#第2节-社会历史发展动力" class="headerlink" title="第2节  社会历史发展动力"></a>第2节  社会历史发展动力</h4><p><strong>一、社会基本矛盾在历史发展中的作用  P152</strong></p><ul><li><p><strong>首先，生产力是社会基本矛盾运动中最基本的动力因素，是人类社会发展和进步的最终决定力量</strong></p></li><li><p><strong>其次，社会基本矛盾特别是生产力和生产关系的矛盾，决定着社会中其他矛盾的存在和发展</strong></p></li><li><p><strong>最后，社会基本矛盾具有不同的表现形式和解决方式，并从根本上影响和促进社会形态的变化和发展</strong></p></li></ul><p>二、阶级斗争的含义  P158</p><p>阶级斗争根源于阶级之间物质利益的根本对立，一切阶级斗争，归根结底都是围绕经济利益这个轴心展开的。</p><p><strong>三、文化对社会发展的作用  P167</strong></p><ol><li><strong>文化为社会发展提供思想指引</strong></li><li><strong>文化为社会发展提供精神动力</strong></li><li><strong>文化为社会发展提供凝聚力量</strong></li></ol><h4 id="第3节-人民群众在历史发展中的作用"><a href="#第3节-人民群众在历史发展中的作用" class="headerlink" title="第3节  人民群众在历史发展中的作用"></a>第3节  人民群众在历史发展中的作用</h4><p>一、人民群众在创造历史过程中的决定作用  P172</p><ul><li>人民群众是社会物质财富的创造者</li><li>人民群众是社会精神财富的创造者</li><li>人民群众是社会变革的决定力量</li></ul><p><strong>2.</strong>  <strong>群众路线  P174</strong> </p><ol><li><strong>群众路线是我们党的生命线和根本工作路线，也是我们党的优良传统</strong></li><li><strong>群众路线是群众观点的具体应用，即一切为了群众，一切依靠群众，从群众中来，到群众中去。</strong></li><li><strong>群众路线的实质，就在于充分相信群众，坚决依靠群众，密切联系群众，全心全意为大民群服务。</strong></li></ol><h3 id="第4章-资本主义的发展及其趋势"><a href="#第4章-资本主义的发展及其趋势" class="headerlink" title="第4章  资本主义的发展及其趋势"></a>第4章  资本主义的发展及其趋势</h3><p><strong>一、商品的二因素及其相互关系  P185</strong></p><ul><li><p><strong>商品具有使用价值和价值两个因素或两种属性。</strong></p></li><li><p><strong>它们之间是对立统一的关系，其对立性表现在使用价值和价值是相互排斥的，二者不可兼得。其统一性表现在作为商品必须同时具有使用价值和价值两个因素。</strong></p></li></ul><p>二、商品价值量的决定  P187</p><ul><li><p>决定商品价值量的是社会必要劳动时间。</p></li><li><p>商品的价值量与劳动生产率成反比。</p></li><li><p>等价交换原则。</p></li><li><p>商品交换以价值量为基础。</p></li></ul><p>三、货币的职能P188</p><p>货币具有价值尺度，流通手段（一手交钱，一手交货），贮藏手段，支付手段和世界货币等职能。</p><p>四、价值规律的表现形式P189</p><p>价值规律的表现形式是，商品的价格围绕商品的价值自发波动。</p><p>五、以私有制为基础的商品经济的基本矛盾  P191</p><p>私人劳动和社会劳动的矛盾是商品经济的基本矛盾。</p><p><strong>六、资本原始积累以及资本原始积累途径  P202</strong></p><p><strong>资本原始积累主要是通过两个途径进行的：一是用暴力手段剥夺农民的土地，二是用暴力手段掠夺货币财富。</strong></p><p>七、生产剩余价值的两种基本方法  P209</p><p>即绝对剩余价值的生产和相对剩余价值的生产。</p><p>八、资本积累的源泉  P213</p><p>资本积累的源泉是剩余价值。</p><p><strong>九、资本主义基本矛盾  P222</strong></p><p><strong>生产社会化和生产资料资本主义私人占有之间的矛盾，是资本主义的基本矛盾。</strong></p><p>十、资本主义经济危机本质特征  P223</p><p>生产过剩是资本主义经济危机的本质特征，但是这种过剩是相对过剩。</p><h3 id="第5章-资本主义的发展及其趋势"><a href="#第5章-资本主义的发展及其趋势" class="headerlink" title="第5章  资本主义的发展及其趋势"></a>第5章  资本主义的发展及其趋势</h3><p>一、垄断条件下的竞争与自由竞争  P239</p><p>垄断条件下的竞争具有更大的破坏性。</p><p>二、垄断不能消除竞争的原因  P239</p><p>垄断并不能消除竞争，反而使竞争变得更加复杂和激烈。</p><ul><li><p>垄断没有消除产生竞争的经济条件。</p></li><li><p>垄断必须通过竞争来维持。</p></li><li><p>社会生产是复杂多样的，任何垄断组织都不可能把包罗万象的社会生产全部包下来。</p></li></ul><p>三、垄断利润的最终来源  P241</p><p>垄断资本所获得的高额利润归根到底来自无产阶级和其他劳动人民所创造的剩余价值。</p><p>四、国家垄断资本主义含义  P242</p><p>国家垄断资本主义是国家政权和私人垄断资本融合在一起的垄断资本主义。</p><p>五、国际金融危机与经济全球化  P256</p><p>国际金融危机不是经济全球化发展的必然产物。</p><p><strong>六、当代资本主义变化的新特征  P264-267</strong></p><ol><li><strong>科技创新加速资本主义生产方式变化。</strong></li><li><strong>国际金融垄断资本主义影响日益显现。</strong></li><li><strong>社会阶级层级结构呈现复杂性、多样化。</strong></li><li><strong>发达资本主义国家凭借经济，科技，文化传播等超级优势，在世界范围内推行霸权主义和强权政治。</strong></li></ol><h3 id="第6章-社会主义的发展及其规律"><a href="#第6章-社会主义的发展及其规律" class="headerlink" title="第6章  社会主义的发展及其规律"></a>第6章  社会主义的发展及其规律</h3><p>一、巴黎公社——无产阶级夺取政权的第一次伟大尝试    P282</p><p>1871年爆发的巴黎公社革命是无产阶级夺取政权的第一次伟大尝试。</p><p>二、无产阶级革命的目的  P295</p><p>无产阶级革命是无产阶级进行斗争的最高形式，以建立无产阶级专政的国家政权为目的。</p><p><strong>三、正确把握科学社会主义基本原则  P302-304</strong></p><ol><li><strong>必须始终坚持科学社会主义基本原则，反对任何背离科学社会主义基本原则的错误倾向</strong>。</li><li><strong>要善于把握科学社会主义基本原则与本国实际和时代特征相结合，创造性的回答和解决社会主义革命、建设、改革中的重大问题。</strong></li><li><strong>紧跟时代和实践的发展，在不断总结新鲜经验中进一步丰富和发展科学社会主义基本原则</strong>。</li></ol><p><strong>四、如何探索适合本国国情的发展道路  P312</strong></p><ol><li>探索社会主义发展道路，必须坚持对待马克思主义的科学态度</li><li>探索社会主义发展道路，必须从当时当地的历史条件出发，坚持“走自己的路”</li><li>探索社会主义发展道路，必须充分吸收人类一切优秀文明成果</li></ol><p><strong>五、社会主义实践遵循客观规律  P316</strong></p><p><strong>社会主义在实践中开拓前进必须遵循人类社会发展规律、社会主义建设规律、共产党执政规律。</strong></p><h3 id="第7章-共产主义崇高理想及其最终实现"><a href="#第7章-共产主义崇高理想及其最终实现" class="headerlink" title="第7章  共产主义崇高理想及其最终实现"></a>第7章  共产主义崇高理想及其最终实现</h3><p>一、共产主义社会的基本特征  P328</p><p>共产主义社会，将是物质财富极大丰富，人民精神境界极大提高，每个人自由而全面发展的社会。</p><p>二、无产阶级的解放与全人类的解放  P340</p><p>无产阶级的解放与全人类的解放是完全一致的。</p><p><strong>三、远大理想和共同理想  P346</strong></p><ul><li><p><strong>首先，从时间上看，远大理想和共同理想的关系是最终理想与阶段性理想的关系。</strong></p></li><li><p><strong>其次，从层次上看，远大理想和共同理想的关系是最高纲领与最低纲领的关系。</strong></p></li><li><p><strong>最后，从范围上看，远大理想和共同理想的关系是全人类理想与全体中国人民理想的关系。</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 复习文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> review </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新网络营销复习</title>
      <link href="/2023/12/28/xin-wang-luo-ying-xiao-fu-xi/"/>
      <url>/2023/12/28/xin-wang-luo-ying-xiao-fu-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="网络营销期末复习"><a href="#网络营销期末复习" class="headerlink" title="网络营销期末复习"></a>网络营销期末复习</h1><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h3 id="填空或判断"><a href="#填空或判断" class="headerlink" title="填空或判断"></a>填空或判断</h3><ol><li><p>网络营销<strong>为用户创造价值</strong>是网络营销的核心思想，基于互联网工具的各种方法是开展网络营销的基本手段。</p></li><li><p>网络营销：<strong>是基于互联网络及社会关系网络，连接企业用户及公众，向用户及公众传递有价值的信息和服务，为实现顾客价值及企业营销目标所进行的规划、实施及运营管理活动。</strong></p></li><li><p>网络营销不再是可有可无，或者需要的时候才临时拿起来的一种工具。</p></li><li><p><strong>网络营销的基本职能：网络品牌，网站推广，信息发布，销售促进，网上销售，顾客服务，顾客关系，网上调研。</strong></p></li><li><p>网络营销的重要任务之一就是在互联网上建立并推广企业的品牌，以及让企业的线下品牌在网上得以延伸和扩展。</p></li><li><p>传统的网络品牌建设是以企业网站建设及第三方平台信息发布为基础。也是以互联网为基础，通过一系列的推广措施，达到客户和公众对企业的认知和认可。</p></li><li><p>网络品牌价值是网络营销效果的表现形式之一，也是综合表现。</p></li></ol><h3 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h3><p><strong>一、网络营销的定义</strong></p><ol><li><strong>揭示了网络营销的生态思维</strong></li><li><strong>突出了网络营销中人的核心地位</strong></li><li><strong>强调了网络营销的客户价值</strong></li><li><strong>延续了网络营销活动的系统性</strong></li></ol><p><strong>二、网络营销信息传递的特点</strong></p><ol><li>网络营销信息传递效率高</li><li>网络营销信息的传递方式多样化</li><li>网络营销信息的传递渠道多样化</li><li>网络营销中的信息传递是双向的</li><li>网络营销信息传递中的噪声</li></ol><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h3 id="填空或判断-1"><a href="#填空或判断-1" class="headerlink" title="填空或判断"></a>填空或判断</h3><ol><li>根据网络营销信息传递原理，企业网络营销系统不管多么复杂或简单，都可以归为三个基础系统：<strong>信息源系统、信息传递系统、用户交互或管理系统。</strong></li><li>网络营销信息源的基本要素：<strong>信息发布者、信息发布渠道、信息状态属性。</strong></li><li>根据网络信息发布渠道的三种主要类型，<strong>运营型、分享型、约束型</strong>，相应的可以将信息源分为三类，<strong>完全可控信息、有限控制信息、完全不可控信息。</strong></li><li>对于一个企业的网络营销信息源，信息发布主体不一定是该企业。</li><li>网络营销信息发布渠道和传递渠道之间存在一定联系，但两者是不一样的。</li><li>信息发布渠道与信息传递渠道的关系，可以从三个方面来理解。<strong>一、相对独立与相互关联，二、非一一对应关系，三、目标一致性。</strong></li><li>作为企业官方信息源的基础，企业网站是完全可控型网络营销信息源的代表，对其他类型的信息源构建与传播具有重要的支持作用。</li></ol><h3 id="简答题-1"><a href="#简答题-1" class="headerlink" title="简答题"></a>简答题</h3><p><strong>一、</strong> <strong>企业网络营销信息源必须符合以下基本原则</strong></p><ol><li><strong>信息源是对用户期望信息的满足</strong></li><li><strong>信息源发布渠道与传递渠道相适应</strong></li><li><strong>信息源符合用户获取信息的方式</strong></li></ol><p><strong>二、</strong> <strong>网络信息发布渠道的类别</strong></p><ol><li>运营型网络信息发布渠道，如企业网站、企业博客、企业官方商城。</li><li>分享型网络信息发布渠道，如QQ空间、QQ群、微信朋友圈等。</li><li>约束型网络信息发布渠道。</li></ol><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><h3 id="填空或判断-2"><a href="#填空或判断-2" class="headerlink" title="填空或判断"></a>填空或判断</h3><ol><li><strong>企业网站的基本要素：网站结构、网站内容、网站功能、网站服务。</strong></li><li>企业网站的一般特征：<strong>权威性、可控性、长期性、稳定性、适应性。</strong></li><li>关于企业网站优化设计需要以用户获取有价值的信息为导向。</li><li><strong>开展博客营销的基础是人际关系资源的整合和利用。</strong></li><li>从一定程度上可以认为，博客营销是一种知识营销方式。</li><li><strong>博客营销的定义：博客营销是一种基于个人知识资源，包括思想、体验等表现形式的网络信息传递形式。因此，开展博客营销的基础问题是对某个领域知识的掌握、学习和有效利用，并通过对知识的传播达到营销信息传递的目的。</strong></li><li><strong>知识营销的定义：知识营销是通过有效的知识传播方法和途径，将企业所拥有的对用户有价值的知识，包括产品知识、专业研究成果、经营理念、管理思想以及优秀的企业文化等传递给潜在用户，并逐渐形成对企业品牌和产品的认知，为潜在用户最终转化为用户的过程和各种营销行为。</strong></li><li>博客营销是知识营销的一种具体表现形式。</li><li>博客营销是内容营销的一种形式，有内容营销的特点。</li><li>博客营销具有软性营销的特点。</li><li>博客的内容、选题范围和形式表现更为灵活，使得博客文章内容丰富。</li><li>博客营销体现了全员网络营销等社会化营销的思想，具有全员网络营销的特点。</li><li>企业博客文章写作的一般原则：<strong>一、确保博客内容的合法性，二、正确处理个人观点与企业立场的关系，三、博客文章的保密原则，四、博客文章中其他必要的声明，五、每个人都应有版权意识。</strong></li><li>与许可营销理论有关的网络营销方式：<strong>一、微信公众号，二、手机短信营销，三、APP信息推送，四、邮件列表。</strong></li><li>在email营销的定义中，强调了三个基本因素：<strong>一、基于用户许可，二、通过电子邮件传递信息，三、信息对用户是有价值的。</strong></li><li>正规的email营销，也就是许可email营销。</li><li>微信公众号内容的基本要素：<strong>一、封面设计，二、文章标题，三、正文内容，四、发布人信息，五、辅助推广信息。</strong></li><li>社会化网络营销即SAS营销是指借助于社会化网络媒体开展的各种网络营销活动，并非一种具体的方法，参与的群体也不一定是网络营销专业人员。</li><li>微博的特点：一、微博信息发布更便捷，二、微博信息传播速度更快，三、微博用户之间的交互性更强，四、微博平台具有行业集中的特点。</li><li>企业微博账户的常见形式：一、企业官方微博，二、企业分支机构及职能部门微博，三、企业领导人微博，四、企业员工微博，五、行业资讯微博。</li><li>企业的官方网站和官方微博相比，两者都需要有价值的内容。</li><li><strong>博客营销与微博营销相比，前者比后者更重视内容价值的持久性。</strong></li><li>博客营销与微博营销共同点在于都属于内容营销的形式，都具有全员网络营销的基础。</li><li>自媒体意指：用户可以通过某个网络平台自行发布信息，并且通过平台内部推荐传播以及用户个人的社交关系网络等渠道，在一定范围内实现信息传播及用户交互。其核心在于用户的自主性及在网络平台规则许可的范围内发布和传播信息。</li><li>自媒体营销的特点主要体现在两个方面：<strong>一、内容营销矩阵化，二、多渠道内容推广模式。</strong></li><li>企业负面信息表现为有损企业形象、可能对用户造成误导或者降低对企业信任的内容。负面信息可能是对企业真实问题的反映，也可能是与事实不符的评论，甚至有可能是由于不正当竞争而言，恶意发布的信息是完全不可控的。</li><li>发布在政府网站的信息具有权威性，由法院公告、工商税务公告等可长期存在，且无法消除。</li></ol><h3 id="简答题-2"><a href="#简答题-2" class="headerlink" title="简答题"></a>简答题</h3><p><strong>一、博客文章写作基础选题方法或思路</strong></p><ol><li><strong>个人知识和观点分享</strong></li><li><strong>对专业领域问题的研究和思考</strong></li><li><strong>个人生活经历及其延伸的故事分享</strong></li><li><strong>与公司工作相关的话题</strong></li><li><strong>对行业问题的关注及思考</strong></li><li><strong>社会活动及人脉资源扩展</strong></li><li><strong>没有明确主题的其他领域</strong></li></ol><p><strong>二、订阅性内容营销</strong></p><p><strong>是基于用户许可的信息传递模式，是一种可独立于企业网站的采用推送方式传递的信息源形式。常见的订阅型内容营销方法包括许可E-mail营销、邮件列表营销和微信订阅号营销</strong>。</p><p><strong>三、微博营销归纳为八种常见的模式</strong></p><ul><li><strong>模式一：企业微博共同体传播模式</strong></li><li><strong>模式二：社会关系资源传播模式</strong></li><li><strong>模式三：利益驱动型微博传播模式</strong></li><li><strong>模式四：微博用户自发传播模式（微病毒营销模式）</strong></li><li><strong>模式五：微博平台推荐模式</strong></li><li><strong>模式六：微博广告模式</strong></li><li><strong>模式七：微媒体传播模式</strong></li><li><strong>模式八：微博扩展传播模式</strong></li></ul><p><strong>四、智能分发的定义</strong> </p><p>是在订阅型信息平台的基础上，通过大数据与人工智能的分析方法，将信息源分发到感兴趣的用户，通过用户订阅及定向信息推送等方式实现信息的快速传递。采用智能分发方式的网络营销工具如抖音、今日头条等自媒体平台。</p><p><strong>五、自媒体平台文章标题设计特点</strong></p><ol><li>突出紧迫感，促使用户立即行动</li><li>从用户心理角度利用悬念引起好奇心</li><li>突出重要性和独特性</li><li>蹭热点的标题</li><li>与用户密切相关的标题</li></ol><p><strong>六、从信息发布和传递渠道来看，负面信息表现为以下几种形式</strong> （案例分析）</p><ol><li>用户通过分享型渠道发布的负面信息            </li><li>通过搜索引擎进传播的企业负面信息</li><li>新闻媒体的负面报道</li><li>政府网站公告中含有企业负面信息。</li></ol><p><strong>七、企业负面信息的常见处理方法</strong> （<strong>案例分析</strong>）</p><ol><li>企业正面信息引导 </li><li>与负面信息发布人沟通联系</li><li>与网站管理人员联系</li><li>通过法律途径解决</li><li>建立负面信息监测体系</li></ol><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><h3 id="填空或判断-3"><a href="#填空或判断-3" class="headerlink" title="填空或判断"></a>填空或判断</h3><ol><li>网站内部资源推广，简称站内推广，是基于网站运营的网络推广方式。</li><li>搜索引擎营销的常见形式包括：<strong>搜索引擎优化（基于自然搜索结果SEO）和搜索引擎广告，（在搜索结果页面投放的商业广告）。</strong></li><li>搜索引擎营销是一种引导型信息传递渠道。</li><li>在用户通过搜索引擎获取信息的过程中，搜索引进为用户每次搜索而生成的搜索结果页面（SERP）不同时间的搜索结果可能不完全相同，但都是由三个部分做成：一、付费广告，二、自然排名，三、搜索结果页面。</li><li><strong>搜索引擎优化的根本目的是用户通过搜索引擎获取有价值的信息。</strong></li><li>搜索引擎优化的英文表示是SEO。</li><li><strong>搜索引擎优化的出发点和目的是用户，而不是搜索引擎。</strong></li><li>网页标题设计的一般原则：一、网页标题不宜过短或者过长，二、网页标题应概括网页的核心内容，三、网页标题中应含有必要的关键词。</li><li>网络标题中应含有必要的关键词，不是越多越好。而是要尽量让网页标题中还有用户检索所使用的关键词。</li><li>搜索引擎关键词广告是广告主付费展示的商业信息。搜索引擎广告是企业常用的搜索引擎营销方式之一，也是搜索引擎平台的主要收益模式。</li><li>按点击付费CPC是搜索引擎关键词广告模式最大的特点之一，对用户浏览而没有点击的信息，企业将不必为此支付费用。</li><li>实现微博转发的八种常见方式：一、内容驱动转发，二、好友友情转发，三、互换资源转发，四关联账号转发，五、大号代理转发，六、利益驱动转发，七、互助联盟转发，八、微公益转发。</li><li>众筹的网络营销意义。以客户价值为导向，利用适当的信息发布与传播渠道，为用户提供有价值的信息，获得用户关注、参与或购买等预期结果。</li></ol><h3 id="简答题-3"><a href="#简答题-3" class="headerlink" title="简答题"></a>简答题</h3><p><strong>一、搜索引擎营销的四个层次</strong></p><ul><li><strong>第一层，搜索引擎营销的存在层</strong></li><li><strong>第二层，搜索引进营销的表现层</strong></li><li><strong>第三层，搜索引进营销的关注层</strong></li><li><strong>第四层，搜索引擎营销的转化层</strong></li></ul><p><strong>二、搜索引擎优化定义</strong></p><p><strong>搜索引擎优化是搜索引擎信息传递系统的组成部分，是为用户通过搜索引进获取有效信息而进行的网站基础信息源及搜索引擎搜索结果引导信息的优化设计，构建用户、搜索引擎、信息源网站三者之间的价值传递关系。</strong></p><p><strong>三、众筹营销的定义+特征</strong></p><p><strong>众筹营销也就是众筹发起人利用众筹平台将支持者连接起来，形成一个以项目（产品或服务）为核心，以价值为导向的利益圈子。 众筹营销的本质特征是价值驱动的未来营销。</strong></p><p><strong>四、病毒性营销的定义</strong></p><p><strong>是一种快速放大网络信息传播的模式，通过用户的口碑宣传及其关系，网络信息像病毒一样传播和扩散。利用快速复制的方式传向数以千计、数以百万计的受众，实现病毒性传播的网络营销。有手机短信、微博、微信等。</strong></p><h2 id="第五、六章"><a href="#第五、六章" class="headerlink" title="第五、六章"></a>第五、六章</h2><h3 id="填空或判断-4"><a href="#填空或判断-4" class="headerlink" title="填空或判断"></a>填空或判断</h3><ol><li><strong>用户连接目的是为了向用户传递有价值的信息，提供客户服务，增进客户关系，提升客户价值，并发挥用户资源价值。</strong></li><li>网络营销中的数据通常是用户的参与或交互而产生的。</li><li>网站页面浏览数（PV)定义：是指在一定统计周期内，所有访问者浏览的网页数量，常作为网站流量统计的主要指标。</li><li>相对于其他免费的网络推广方法，<strong>网络广告的基本特点之一是付费</strong>，急需要向广告服务商或广告媒体支付网络广告投放费用。可见网络广告具有显著的目的性和针对性及通过资金投入，利用专业网络媒体的用户资源实现企业网络推广的目的。</li><li><strong>弹出广告、开屏广告、插播式广告都具有强制性。搜索引擎关键词广告不具有强制性。</strong></li><li><strong>原生广告是天生的、本地化的一种广告形式，简单来说就是网络媒体内容与广告的相互融合，广告也成为网络媒体中有价值的内容的一部分。</strong></li><li>一个网站想要获得搜索引擎收录并取得好的搜索排名，通常需要有一定数量的<strong>外部网站链接</strong>。尤其是高质量网站的网站链接，但不是越多越好。</li><li><strong>网络资源共享营销方式</strong>通常以社会化网络平台为基础，各参与者为了统一目标或利益，形成了多种形式的合作，通过个人的知识资源、社交关系资源的分享或交换，获得更多的资源或直接利益。</li></ol><h3 id="简答题-4"><a href="#简答题-4" class="headerlink" title="简答题"></a>简答题</h3><p><strong>一、</strong> <strong>用户来源渠道的四种基本形式</strong></p><ol><li><strong>用户主动获取企业信息</strong></li><li><strong>通过用户社交关系分享推荐</strong></li><li><strong>用户被动接收企业信息</strong></li><li><strong>用户与企业的连接沟通</strong></li></ol><p><strong>二、</strong> <strong>网站访问统计指标</strong></p><ol><li><strong>独立访问者数量：在一个统计周期内（通常为24小时）访问网站的总人数。</strong></li><li><strong>独立IP数量：在一个统计周期内访问网站的总IP数，如果多个用户共用一个地址，则显示为一个IP。独立IP数量通常小于独立访问者数量。</strong></li><li>重复访问者数量：在一个统计周期内多次访问一个网站的人数。</li><li>页面浏览数：在一个统计周期内所有用户浏览的网页数量总合。</li><li>每个访问者的页面浏览数：每个用户访问不同页面的总数。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 复习文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> review </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>路由PPP实验</title>
      <link href="/2023/09/15/lu-you-ppp-shi-yan/"/>
      <url>/2023/09/15/lu-you-ppp-shi-yan/</url>
      
        <content type="html"><![CDATA[<h1 id="PPP路由实验"><a href="#PPP路由实验" class="headerlink" title="PPP路由实验"></a>PPP路由实验</h1><h3 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h3><ol><li><p>掌握PPP的基本配置</p></li><li><p>掌握CHAP的基本配置步骤和方法</p></li><li><p>掌握对CHAP进行诊断的基本方法</p></li></ol><h3 id="二、应用环境"><a href="#二、应用环境" class="headerlink" title="二、应用环境"></a>二、应用环境</h3><p>PPP协议是一种点——点串行通信协议。PPP具有处理错误检测、支持多个协议、允许在连接时刻协商IP地址、允许身份认证等功能，还有其他。PPP提供了3类功能：成帧、链路控制协议LCP、网络控制协议NCP。PPP是面向字符类型的协议。</p><p>PPP协议的验证分为两种：一种是PAP，一种是CHAP。相对来说PAP的认证方式安全性没有CHAP高。PAP在传输Password是明文的，而CHAP在传输过程中不传输密码，取代密码的是hash（哈希值）。PAP认证是通过两次握手实现的，而CHAP则是通过3次握手实现的。</p><p>本实验以CHAP为例。</p><h3 id="三、实验拓扑"><a href="#三、实验拓扑" class="headerlink" title="三、实验拓扑"></a>三、实验拓扑</h3><p>实验拓扑如下，实验设备：2811路由器两台、PC机两台、串口线一根、交叉线两根。</p><p><img src="https://pic.imgdb.cn/item/650437cc661c6c8e549701fd.png" alt="拓扑图"></p><h3 id="四、实验要求"><a href="#四、实验要求" class="headerlink" title="四、实验要求"></a>四、实验要求</h3><p>在路由器A和路由器B配置CHAP实验。</p><p>PC1的IP地址为192.168.1.1/24，网关为192.168.1.254。</p><p>PC1的IP地址为192.168.3.1/24，网关为192.168.3.254。</p><h3 id="五、实验步骤"><a href="#五、实验步骤" class="headerlink" title="五、实验步骤"></a>五、实验步骤</h3><h4 id="第一步：给PC机设置IP地址（略）"><a href="#第一步：给PC机设置IP地址（略）" class="headerlink" title="第一步：给PC机设置IP地址（略）"></a>第一步：给PC机设置IP地址（略）</h4><h4 id="第二步：给路由器设置IP地址并设置时钟频率"><a href="#第二步：给路由器设置IP地址并设置时钟频率" class="headerlink" title="第二步：给路由器设置IP地址并设置时钟频率"></a>第二步：给路由器设置IP地址并设置时钟频率</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#interface fastEthernet 0/0Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.1.254 255.255.255.0Router(config-if)#exitRouter(config)#interface serial 1/0Router(config-if)#no shutdownRouter(config-if)#clock rate 64000Router(config-if)#ip address 192.168.2.1 255.255.255.0Router(config-if)#exitRouter(config)#路由器B：Router(config)#Router(config)#interface serial 1/0Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.2.2 255.255.255.0Router(config-if)#exitRouter(config)#interface fastEthernet 0/0Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.3.254 255.255.255.0Router(config-if)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第三步：给路由器配置静态路由"><a href="#第三步：给路由器配置静态路由" class="headerlink" title="第三步：给路由器配置静态路由"></a>第三步：给路由器配置静态路由</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#ip route 192.168.3.0 255.255.255.0 192.168.2.2Router(config)#路由器B：Router(config)#Router(config)#ip route 192.168.1.0 255.255.255.0 192.168.2.1Router(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第四步：测试PC1和PC2之间连通性"><a href="#第四步：测试PC1和PC2之间连通性" class="headerlink" title="第四步：测试PC1和PC2之间连通性"></a>第四步：测试PC1和PC2之间连通性</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">测试方法：用PC1 Ping PC2测试连通性。PC&gt;ping 192.168.3.1Pinging 192.168.3.1 with 32 bytes of data: Request timed out.Reply from 192.168.3.1: bytes=32 time=6ms TTL=126Reply from 192.168.3.1: bytes=32 time=6ms TTL=126Reply from 192.168.3.1: bytes=32 time=9ms TTL=126Ping statistics for 192.168.3.1:  Packets: Sent = 4, Received = 3, Lost = 1 (25% loss),Approximate round trip times in milli-seconds:  Minimum = 6ms, Maximum = 9ms, Average = 7msPC&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当出现以上结果时，则表示PC1和PC2连通。</p><p>如果没有出现以上结果，表明PC1和PC2不连通，应检查IP地址或线缆是否配置正确、接口是否启用，静态路由是否配置正确。</p><h4 id="第五步：配置CHAP单向认证服务端和认证客户端"><a href="#第五步：配置CHAP单向认证服务端和认证客户端" class="headerlink" title="第五步：配置CHAP单向认证服务端和认证客户端"></a>第五步：配置CHAP单向认证服务端和认证客户端</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#hostname routeraroutera(config)#username routerb password 123456routera(config)#interface serial 1/0routera(config-if)#encapsulation ppproutera(config-if)#ppp authentication chaproutera(config-if)#exitroutera(config)#路由器B：Router(config)#Router(config)#hostname routerbrouterb(config)#username routera password 123456routerb(config)#interface serial 1/0routerb(config-if)#encapsulation ppprouterb(config-if)#exitrouterb(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第六步：配置CHAP双向认证（可选）"><a href="#第六步：配置CHAP双向认证（可选）" class="headerlink" title="第六步：配置CHAP双向认证（可选）"></a>第六步：配置CHAP双向认证（可选）</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#hostname routeraroutera(config)#username routerb password 123456routera(config)#interface serial 1/0routera(config-if)#encapsulation ppproutera(config-if)#ppp authentication chaproutera(config-if)#exitroutera(config)#路由器B：Router(config)#Router(config)#hostname routerbrouterb(config)#username routera password 123456routerb(config)#interface serial 1/0routerb(config-if)#encapsulation ppprouterb(config-if)#ppp authentication chaprouterb(config-if)#exitrouterb(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第七步：测试PC1和PC2之间连通性"><a href="#第七步：测试PC1和PC2之间连通性" class="headerlink" title="第七步：测试PC1和PC2之间连通性"></a>第七步：测试PC1和PC2之间连通性</h4><p>测试方法：用PC1 Ping PC2测试连通性。</p><pre class="line-numbers language-router" data-language="router"><code class="language-router">PC&gt;ping 192.168.3.1Pinging 192.168.3.1 with 32 bytes of data: Reply from 192.168.3.1: bytes=32 time=8ms TTL=126Reply from 192.168.3.1: bytes=32 time=6ms TTL=126Reply from 192.168.3.1: bytes=32 time=1ms TTL=126Reply from 192.168.3.1: bytes=32 time=1ms TTL=126Ping statistics for 192.168.3.1:  Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),Approximate round trip times in milli-seconds:  Minimum = 1ms, Maximum = 8ms, Average = 4msPC&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当出现以上结果时，则表示PC1和PC2连通。</p><p>如果没有出现以上结果，表明PC1和PC2不连通，应检查IP地址或线缆是否配置正确、接口是否启用，静态路由和PPP是否配置正确。</p><h3 id="六、相关命令详解"><a href="#六、相关命令详解" class="headerlink" title="六、相关命令详解"></a>六、相关命令详解</h3><h5 id="1、hostname"><a href="#1、hostname" class="headerlink" title="1、hostname"></a>1、hostname</h5><p>命令：hostname <name></name></p><p>功能：设置主机名。</p><p>命令模式：全局配置模式</p><p>使用指南：当需要配置交换机或路由器的主机名时，可以在相应设备的全局配置模式下输入此命令来配置主机名。</p><h5 id="2、username-password"><a href="#2、username-password" class="headerlink" title="2、username password"></a>2、username password</h5><p>命令：username <name> password <password></password></name></p><p>功能：建立用户名和密码。</p><p>命令模式：全局配置模式</p><p>使用指南：当需要建立用户名和密码时，在全局配置模式下输入此命令。</p><h5 id="3、encapsulation"><a href="#3、encapsulation" class="headerlink" title="3、encapsulation"></a>3、encapsulation</h5><p>命令：encapsulation {ppp | hdlc | frame-relay}</p><p>功能：选择接口协议。</p><p>命令模式：接口配置模式</p><p>使用指南：配置接口下使用的接口协议。</p><h5 id="4、ppp-authentication"><a href="#4、ppp-authentication" class="headerlink" title="4、ppp authentication"></a>4、ppp authentication</h5><p>命令：ppp authentication {chap | pap}</p><p>功能：配置ppp验证方式。</p><p>命令模式：接口配置模式</p><p>使用指南：配置PPP的验证方式为CHAP或PAP。</p>]]></content>
      
      
      <categories>
          
          <category> 路由实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Router </tag>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NAT地址转换实验</title>
      <link href="/2023/09/11/nat-di-zhi-zhuan-huan-shi-yan/"/>
      <url>/2023/09/11/nat-di-zhi-zhuan-huan-shi-yan/</url>
      
        <content type="html"><![CDATA[<h1 id="NAT地址转换实验"><a href="#NAT地址转换实验" class="headerlink" title="NAT地址转换实验"></a>NAT地址转换实验</h1><h3 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h3><ol><li><p>掌握NAT地址转换的基本配置</p></li><li><p>掌握地址转换的相关概念、分类和工作原理</p></li><li><p>了解地址转换的NAT技术</p></li></ol><h3 id="二、应用环境"><a href="#二、应用环境" class="headerlink" title="二、应用环境"></a>二、应用环境</h3><p>NAT的最初的目的是允许把私有IP地址映射到公网地址，以减缓IP地址空间的消耗。</p><p>由于IP地址的使用需求旺盛，造成了全球公有IP地址的枯竭。因此目前所有的企业在构建的过程中，都只能使用私有IP地址。但互联网上的路由器不转发带有私有IP地址的数据包，因此企业内部计算机如果需要访问互联网，就需要在企业网络的出口路由器或者防火墙设备上，配置NAT地址转换技术，把企业网中的私有地址转换成公有地址，才能实现企业网对互联网的访问。</p><h3 id="三、实验拓扑"><a href="#三、实验拓扑" class="headerlink" title="三、实验拓扑"></a>三、实验拓扑</h3><p>实验拓扑如下，实验设备：2811路由器两台、PC机一台、Server服务器一台、串口线一根、交叉线两根。</p><p><img src="https://pic.imgdb.cn/item/64fe7576661c6c8e545e26f7.png" alt="拓扑图"></p><h3 id="四、实验要求"><a href="#四、实验要求" class="headerlink" title="四、实验要求"></a>四、实验要求</h3><p>各配置如下：</p><table><thead><tr><th align="center">设备</th><th align="center">端口</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">路由器A</td><td align="center">S1/0</td><td align="center">123.56.220.1/8</td></tr><tr><td align="center"></td><td align="center">F0/1</td><td align="center">192.168.1.254/24</td></tr><tr><td align="center">路由器B</td><td align="center">S1/0</td><td align="center">123.56.220.2/8</td></tr><tr><td align="center"></td><td align="center">F0/1</td><td align="center">172.168.168.254/24</td></tr><tr><td align="center">PC0</td><td align="center">网卡接口</td><td align="center">192.168.1.1/24</td></tr><tr><td align="center">Server0</td><td align="center">网卡接口</td><td align="center">172.168.168.168/24</td></tr></tbody></table><p>内网1的PC需要访问内网2的服务器，但是因为中间间隔Intetnet，所以我们需要在路由器A设置NAPT，同时在内网2下配置静态NAT，确保PC0可以访问到Server服务器。</p><h3 id="五、实验步骤"><a href="#五、实验步骤" class="headerlink" title="五、实验步骤"></a>五、实验步骤</h3><h4 id="第一步：给PC机和服务器设置IP地址（略）"><a href="#第一步：给PC机和服务器设置IP地址（略）" class="headerlink" title="第一步：给PC机和服务器设置IP地址（略）"></a>第一步：给PC机和服务器设置IP地址（略）</h4><h4 id="第二步：给路由器设置IP地址并设置时钟频率"><a href="#第二步：给路由器设置IP地址并设置时钟频率" class="headerlink" title="第二步：给路由器设置IP地址并设置时钟频率"></a>第二步：给路由器设置IP地址并设置时钟频率</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#interface fastEthernet 0/1Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.1.254 255.255.255.0Router(config-if)#exitRouter(config)#interface serial 1/0Router(config-if)#no shutdownRouter(config-if)#clock rate 64000Router(config-if)#ip address 123.56.220.1 255.0.0.0Router(config-if)#exitRouter(config)#路由器B：Router(config)#Router(config)#interface fastEthernet 0/1Router(config-if)#no shutdownRouter(config-if)#ip address 172.168.168.254 255.255.255.0Router(config-if)#exitRouter(config)#interface serial 1/0Router(config-if)#no shutdownRouter(config-if)#ip address 123.56.220.2 255.0.0.0Router(config-if)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第三步：给路由器配置静态路由"><a href="#第三步：给路由器配置静态路由" class="headerlink" title="第三步：给路由器配置静态路由"></a>第三步：给路由器配置静态路由</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#ip route 172.168.168.0 255.255.255.0 123.56.220.2Router(config)#路由器B：Router(config)#Router(config)#ip route 192.168.1.0 255.255.255.0 123.56.220.1Router(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第四步：测试PC机和服务器连通性"><a href="#第四步：测试PC机和服务器连通性" class="headerlink" title="第四步：测试PC机和服务器连通性"></a>第四步：测试PC机和服务器连通性</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">测试方法：用PC机Ping服务器测试连通性。PC&gt;ping 172.168.168.168Pinging 172.168.168.168 with 32 bytes of data: Reply from 172.168.168.168: bytes=32 time=2ms TTL=126Reply from 172.168.168.168: bytes=32 time=12ms TTL=126Reply from 172.168.168.168: bytes=32 time=16ms TTL=126Reply from 172.168.168.168: bytes=32 time=13ms TTL=126Ping statistics for 172.168.168.168:Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),Approximate round trip times in milli-seconds:Minimum = 2ms, Maximum = 16ms, Average = 10msPC&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当出现以上结果时，则表示PC机和服务器连通。</p><p>如果没有出现以上结果，表明PC机和服务器不连通，应检查IP地址或线缆是否配置正确、接口是否启用。</p><h4 id="第五步：配置路由器内部端口和外部端口"><a href="#第五步：配置路由器内部端口和外部端口" class="headerlink" title="第五步：配置路由器内部端口和外部端口"></a>第五步：配置路由器内部端口和外部端口</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#interface fastEthernet 0/1Router(config-if)#ip nat insideRouter(config-if)#exitRouter(config)#interface serial 1/0Router(config-if)#ip nat outsideRouter(config-if)#exitRouter(config)#路由器B：Router(config)#Router(config)#interface fastEthernet 0/1Router(config-if)#ip nat insideRouter(config-if)#exitRouter(config)#interface serial 1/0Router(config-if)#ip nat outsideRouter(config-if)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第六步：配置内网1端口复用"><a href="#第六步：配置内网1端口复用" class="headerlink" title="第六步：配置内网1端口复用"></a>第六步：配置内网1端口复用</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#access-list 1 permit 192.168.1.0 0.0.0.255Router(config)#ip nat inside source list 1 interface serial 1/0 overload Router(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第七步：配置内网2静态NAT"><a href="#第七步：配置内网2静态NAT" class="headerlink" title="第七步：配置内网2静态NAT"></a>第七步：配置内网2静态NAT</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器B：Router(config)#Router(config)#ip nat inside source static 172.168.168.168 123.56.220.3Router(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第八步：测试PC机和服务器静态转换的连通性"><a href="#第八步：测试PC机和服务器静态转换的连通性" class="headerlink" title="第八步：测试PC机和服务器静态转换的连通性"></a>第八步：测试PC机和服务器静态转换的连通性</h4><p>测试方法：PC1 Ping 服务器NAT转换的IP地址</p><pre class="line-numbers language-router" data-language="router"><code class="language-router">PC&gt;ping 123.56.220.3Pinging 123.56.220.3 with 32 bytes of data: Reply from 123.56.220.3: bytes=32 time=11ms TTL=126Reply from 123.56.220.3: bytes=32 time=6ms TTL=126Reply from 123.56.220.3: bytes=32 time=5ms TTL=126Reply from 123.56.220.3: bytes=32 time=11ms TTL=126Ping statistics for 123.56.220.3:Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),Approximate round trip times in milli-seconds:Minimum = 5ms, Maximum = 11ms, Average = 8msPC&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当出现以上结果时，则表示PC机和服务器连通，本实验完成。</p><p>如果没有出现以上结果，表明PC机和服务器不连通，应检查配置是否正确。</p><h3 id="六、相关命令详解"><a href="#六、相关命令详解" class="headerlink" title="六、相关命令详解"></a>六、相关命令详解</h3><h5 id="1、ip-nat-inside-source"><a href="#1、ip-nat-inside-source" class="headerlink" title="1、ip nat inside source"></a>1、ip nat inside source</h5><p>命令：ip nat inside source { list|static }</p><p>功能：使用ip nat inside source全局配置命令，开启内部源地址的 NAT。</p><p>命令模式：全局配置模式</p><p>使用指南：这个命令有两种形式：动态的和静态的地址转换。带有访问列表的格式建立动态转换。来自和标准访问列表相匹配的地址的报文，将用指定的池中分配的全局地址来进行地址翻译，这个地址池是用ip nat pool命令所指定的。</p><h5 id="2、ip-nat"><a href="#2、ip-nat" class="headerlink" title="2、ip nat"></a>2、ip nat</h5><p>命令：ip nat { inside|outside }</p><p>功能：指定网络连接的网络类型。</p><p>命令模式：接口配置模式</p><p>使用指南：Inside接口连接的一般是LAN网络，Outside连接的一般是Intetnet网络。</p>]]></content>
      
      
      <categories>
          
          <category> 路由实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Router </tag>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSPF认证实验</title>
      <link href="/2023/09/10/ospf-ren-zheng-shi-yan/"/>
      <url>/2023/09/10/ospf-ren-zheng-shi-yan/</url>
      
        <content type="html"><![CDATA[<h1 id="OSPF认证实验"><a href="#OSPF认证实验" class="headerlink" title="OSPF认证实验"></a>OSPF认证实验</h1><h3 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h3><ol><li><p>掌握OSPF区域认证的两种方法即明文认证和MD5认证</p></li><li><p>理解邻居认证的作用</p></li></ol><h3 id="二、应用环境"><a href="#二、应用环境" class="headerlink" title="二、应用环境"></a>二、应用环境</h3><p>在企业环境中，需要配置认证来保证spf路由的安全性。</p><h3 id="三、实验拓扑"><a href="#三、实验拓扑" class="headerlink" title="三、实验拓扑"></a>三、实验拓扑</h3><p>实验拓扑如下，实验设备：2811路由器三台、PC机两台、串口线一根、交叉线三根。                                                    </p><p><img src="https://pic.imgdb.cn/item/64fd2f2d661c6c8e54225a62.png" alt="拓扑图"></p><h3 id="四、实验要求"><a href="#四、实验要求" class="headerlink" title="四、实验要求"></a>四、实验要求</h3><p>PC1的IP地址为192.168.1.1/24，网关为192.168.1.254。</p><p>PC2的IP地址为192.168.4.1/24，网关为192.168.4.254。</p><p>区域area 0使用明文认证方式，区域area 1使用MD5加密认证方式。</p><h3 id="五、实验步骤"><a href="#五、实验步骤" class="headerlink" title="五、实验步骤"></a>五、实验步骤</h3><h4 id="第一步：给PC机设置IP地址（略）"><a href="#第一步：给PC机设置IP地址（略）" class="headerlink" title="第一步：给PC机设置IP地址（略）"></a>第一步：给PC机设置IP地址（略）</h4><h4 id="第二步：给路由器设置IP地址并设置时钟频率"><a href="#第二步：给路由器设置IP地址并设置时钟频率" class="headerlink" title="第二步：给路由器设置IP地址并设置时钟频率"></a>第二步：给路由器设置IP地址并设置时钟频率</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#interface fastEthernet 0/0Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.1.254 255.255.255.0Router(config-if)#exitRouter(config)#interface serial 1/0Router(config-if)#no shutdownRouter(config-if)#clock rate 64000Router(config-if)#ip address 192.168.2.1 255.255.255.0Router(config-if)#exitRouter(config)#路由器B：Router(config)#Router(config)#interface serial 1/0Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.2.2 255.255.255.0Router(config-if)#exitRouter(config)#interface fastEthernet 0/0Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.3.1 255.255.255.0Router(config-if)#exitRouter(config)#路由器C：Router(config)#Router(config)#interface fastEthernet 0/0Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.3.2 255.255.255.0Router(config-if)#exitRouter(config)#interface fastEthernet 0/1Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.4.254 255.255.255.0Router(config-if)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第三步：配置多区域OSPF路由"><a href="#第三步：配置多区域OSPF路由" class="headerlink" title="第三步：配置多区域OSPF路由"></a>第三步：配置多区域OSPF路由</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#router ospf 1Router(config-router)#router-id 1.1.1.1Router(config-router)#network 192.168.1.0 0.0.0.255 area 0Router(config-router)#network 192.168.2.0 0.0.0.255 area 0Router(config-router)#exitRouter(config)#路由器B：Router(config)#Router(config)#router ospf 1Router(config-router)#router-id 2.2.2.2Router(config-router)#network 192.168.2.0 0.0.0.255 area 0Router(config-router)#network 192.168.3.0 0.0.0.255 area 1Router(config-router)#exitRouter(config)#路由器C：Router(config)#Router(config)#router ospf 1Router(config-router)#router-id 3.3.3.3Router(config-router)#network 192.168.3.0 0.0.0.255 area 1Router(config-router)#network 192.168.4.0 0.0.0.255 area 1Router(config-router)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第四步：配置区域明文认证并在OSPF中启用"><a href="#第四步：配置区域明文认证并在OSPF中启用" class="headerlink" title="第四步：配置区域明文认证并在OSPF中启用"></a>第四步：配置区域明文认证并在OSPF中启用</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#interface serial 1/0Router(config-if)#ip ospf authenticationRouter(config-if)#ip ospf authentication-key 123456Router(config-if)#exitRouter(config)#router ospf 1Router(config-router)#area 0 authenticationRouter(config-router)#exitRouter(config)#路由器B：Router(config)#Router(config)#interface serial 1/0Router(config-if)#ip ospf authenticationRouter(config-if)#ip ospf authentication-key 123456Router(config-if)#exitRouter(config)#router ospf 1Router(config-router)#area 0 authenticationRouter(config-router)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第五步：配置区域MD5认证并在OSPF启用"><a href="#第五步：配置区域MD5认证并在OSPF启用" class="headerlink" title="第五步：配置区域MD5认证并在OSPF启用"></a>第五步：配置区域MD5认证并在OSPF启用</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器B：Router(config)#Router(config)#interface fastEthernet 0/0Router(config-if)#ip ospf authenticationRouter(config-if)#ip ospf message-digest-key 1 md5 123456Router(config-if)#exitRouter(config)#router ospf 1Router(config-router)#area 1 authentication message-digestRouter(config-router)#exitRouter(config)#路由器C：Router(config)#Router(config)#interface fastEthernet 0/0Router(config-if)#ip ospf authenticationRouter(config-if)#ip ospf message-digest-key 1 md5 123456Router(config-if)#exitRouter(config)#router ospf 1Router(config-router)#area 1 authentication message-digestRouter(config-router)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第六步：测试"><a href="#第六步：测试" class="headerlink" title="第六步：测试"></a>第六步：测试</h4><p>使用“show ip ospf neighbor”查看邻居数据结构，如每个路由器的邻居表都有相邻路由器的Router-id，那么实验成功。</p><h3 id="六、注意事项和排错"><a href="#六、注意事项和排错" class="headerlink" title="六、注意事项和排错"></a>六、注意事项和排错</h3><p>1、认证方式分为链路认证、区域认证、虚链路认证。</p><h3 id="七、相关命令详解"><a href="#七、相关命令详解" class="headerlink" title="七、相关命令详解"></a>七、相关命令详解</h3><h5 id="1、ip-ospf-authentication"><a href="#1、ip-ospf-authentication" class="headerlink" title="1、ip ospf authentication"></a>1、ip ospf authentication</h5><p>命令：ip ospf authentication</p><p>功能：启用OSPF身份认证。</p><p>命令模式：接口配置模式</p><p>使用指南：当需要配置OSPF身份认证时，就可以在相应的接口下输入此命令，用以启用OSPF身份认证。</p><h5 id="2、ip-ospf-authentication-key"><a href="#2、ip-ospf-authentication-key" class="headerlink" title="2、ip ospf authentication-key"></a>2、ip ospf authentication-key</h5><p>命令：ip ospf authentication-key <password></password></p><p>功能：设置身份验证密钥。</p><p>命令模式：接口配置模式</p><p>使用指南：当需要对身份验证设置密钥时，在相应的接口下输入此命令，设置身份验证密钥。</p><h5 id="3、area-authentication"><a href="#3、area-authentication" class="headerlink" title="3、area authentication"></a>3、area authentication</h5><p>命令：area <area-id> authentication</area-id></p><p>功能：设置区域认证的验证方法为简单验证。</p><p>命令模式：其他配置模式</p><p>使用指南：明文认证即不加密认证，当需要设置简单验证方法时输入此命令。</p><h5 id="4、ip-ospf-message-digest-key"><a href="#4、ip-ospf-message-digest-key" class="headerlink" title="4、ip ospf message-digest-key"></a>4、ip ospf message-digest-key</h5><p>命令：ip ospf message-digest-key <key-id> md5 <password></password></key-id></p><p>功能：设置密文认证的密钥。</p><p>命令模式：接口配置模式</p><p>使用指南：此命令使用MD5加密方式，key-id值为1-255。</p><h5 id="5、area-authentication-message-digest"><a href="#5、area-authentication-message-digest" class="headerlink" title="5、area authentication message-digest"></a>5、area authentication message-digest</h5><p>命令：area <area-id> authentication message-digest</area-id></p><p>功能：设置区域认证的验证方法为MD5密文验证。</p><p>命令模式：其他配置模式</p><p>使用指南：此命令作用是在相应的区域里启用MD5密文验证。</p><h5 id="6、show-ip-ospf-neighbor"><a href="#6、show-ip-ospf-neighbor" class="headerlink" title="6、show ip ospf neighbor"></a>6、show ip ospf neighbor</h5><p>命令：show ip ospf neighbor</p><p>功能：查看OSPF邻居列表。</p><p>命令模式：接口配置模式</p><p>使用指南：此命令可以查看OSPF相应的邻居信息。</p>]]></content>
      
      
      <categories>
          
          <category> 路由实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Router </tag>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DHCP实验</title>
      <link href="/2023/09/09/dhcp-shi-yan/"/>
      <url>/2023/09/09/dhcp-shi-yan/</url>
      
        <content type="html"><![CDATA[<h1 id="DHCP路由实验"><a href="#DHCP路由实验" class="headerlink" title="DHCP路由实验"></a>DHCP路由实验</h1><h3 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h3><ol><li><p>了解DHCP工作环境</p></li><li><p>掌握DHCP服务基本配置</p></li><li><p>掌握DHCP中继服务配置</p></li></ol><h3 id="二、应用环境"><a href="#二、应用环境" class="headerlink" title="二、应用环境"></a>二、应用环境</h3><p>实现计算机访问互联网的一项重要规则就是：所有访问互联网的计算机必须保证具有全球唯一的IP地址，在日常网络管理工作中，为网络中的计算机手工配置IP地址是一项非常繁琐的工作。一来很多非专业人员不会配置IP地址。二来经常会造成地址配置错误。三来会造成网络中重复使用地址，导致地址冲突。四来会给使用笔记本电脑的人员，在跨区域移动办公室地址分配都很困难。</p><p>为减少日常办公过程中网络管理的工作量，网络中心希望所有计算机的IP地址采取自动获取的方法，这就需要在接入交换机上配置动态主机地址获取协议，动态主机地址分配协议DHCP有效的解决了上述难题，将协议配置在办公网的接入交换机上，可以让接入网络中的主机自动获取上网所需的IP地址。</p><h3 id="三、实验拓扑"><a href="#三、实验拓扑" class="headerlink" title="三、实验拓扑"></a>三、实验拓扑</h3><p>实验拓扑如下，实验设备：2811路由器二台、二层交换机一台、交叉线一根、直通线三根</p><p><img src="https://pic.imgdb.cn/item/64fbd61b661c6c8e54de1bb1.png" alt="拓扑图" title="DHCP实验"></p><h3 id="四、实验要求"><a href="#四、实验要求" class="headerlink" title="四、实验要求"></a>四、实验要求</h3><p>在路由器B上配置DHCP Server的配置，为使PC0和PC1能分配到IP，在路由器A和交换机A上面做DHCP的中继，PC0和PC1在不同的VLAN。</p><p>PC1的网关为192.168.1.254，PC2的网关为192.168.2.254。</p><h3 id="五、实验步骤"><a href="#五、实验步骤" class="headerlink" title="五、实验步骤"></a>五、实验步骤</h3><h4 id="第一步：给交换机A创建VLAN"><a href="#第一步：给交换机A创建VLAN" class="headerlink" title="第一步：给交换机A创建VLAN"></a>第一步：给交换机A创建VLAN</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">交换机A：Switch(config)#Switch(config)#vlan 10Switch(config-vlan)#exitSwitch(config)#vlan 20Switch(config-vlan)#exitSwitch(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第二步：给交换机设置链路类型并添加端口"><a href="#第二步：给交换机设置链路类型并添加端口" class="headerlink" title="第二步：给交换机设置链路类型并添加端口"></a>第二步：给交换机设置链路类型并添加端口</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">交换机A：Switch(config)#Switch(config)#interface fastEthernet 0/1Switch(config-if)#no shutdownSwitch(config-if)#switchport mode trunkSwitch(config-if)#switchport trunk allowed vlan allSwitch(config-if)#exitSwitch(config)#interface fastEthernet 0/2Switch(config-if)#no shutdownSwitch(config-if)#switchport mode accessSwitch(config-if)#switchport access vlan 10Switch(config-if)#exitSwitch(config)#interface fastEthernet 0/3Switch(config-if)#no shutdownSwitch(config-if)#switchport mode accessSwitch(config-if)#switchport access vlan 20Switch(config-if)#exitSwitch(config-if)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第三步：给路由器A上配置单臂路由并配置IP地址"><a href="#第三步：给路由器A上配置单臂路由并配置IP地址" class="headerlink" title="第三步：给路由器A上配置单臂路由并配置IP地址"></a>第三步：给路由器A上配置单臂路由并配置IP地址</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#interface fastEthernet 0/0Router(config-if)#no shutdownRouter(config-if)#exitRouter(config)#interface fastEthernet 0/0.1Router(config-subif)#no shutdownRouter(config-subif)#encapsulation dot1Q 10Router(config-subif)#ip address 192.168.1.254 255.255.255.0Router(config-subif)#exitRouter(config)#interface fastEthernet 0/0.2Router(config-subif)#no shutdownRouter(config-subif)#encapsulation dot1Q 20Router(config-subif)#ip address 192.168.2.254 255.255.255.0Router(config-subif)#exitRouter(config)#interface fastEthernet 0/1Router(config-if)#no shutdownRouter(config-if)#ip address 172.16.1.1 255.255.255.0Router(config-if)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第四步：给路由器B配置IP地址"><a href="#第四步：给路由器B配置IP地址" class="headerlink" title="第四步：给路由器B配置IP地址"></a>第四步：给路由器B配置IP地址</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器B：Router(config)#Router(config)#interface fastEthernet 0/0Router(config-if)#no shutdownRouter(config-if)#ip address 172.16.1.2 255.255.255.0Router(config-if)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第五步：配置静态路由"><a href="#第五步：配置静态路由" class="headerlink" title="第五步：配置静态路由"></a>第五步：配置静态路由</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器B：Router(config)#Router(config)#ip route 192.168.1.0 255.255.255.0 172.16.1.1Router(config)#ip route 192.168.2.0 255.255.255.0 172.16.1.1Router(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第六步：在路由器A配置DHCP中继"><a href="#第六步：在路由器A配置DHCP中继" class="headerlink" title="第六步：在路由器A配置DHCP中继"></a>第六步：在路由器A配置DHCP中继</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#service dhcpRouter(config)#interface fastEthernet 0/0.1Router(config-subif)#ip helper-address 172.16.1.2Router(config-subif)#exitRouter(config)#interface fastEthernet 0/0.2Router(config-subif)#ip helper-address 172.16.1.2Router(config-subif)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第七步：在路由器B配置DHCP-Server"><a href="#第七步：在路由器B配置DHCP-Server" class="headerlink" title="第七步：在路由器B配置DHCP Server"></a>第七步：在路由器B配置DHCP Server</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器B：Router(config)#Router(config)#service dhcpRouter(config)#ip dhcp pool vlan10Router(dhcp-config)#network 192.168.1.0 255.255.255.0Router(dhcp-config)#default-router 192.168.1.254Router(dhcp-config)#exitRouter(config)#ip dhcp pool vlan20Router(dhcp-config)#network 192.168.2.0 255.255.255.0Router(dhcp-config)#default-router 192.168.2.254Router(dhcp-config)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第八步：查看PC机是否获取到IP地址"><a href="#第八步：查看PC机是否获取到IP地址" class="headerlink" title="第八步：查看PC机是否获取到IP地址"></a>第八步：查看PC机是否获取到IP地址</h4><p>如果查看PC机有获取到IP地址，本实验完成。</p><p>如PC机没有获取到IP地址，应检查IP地址、线缆和DHCP中继是否配置正确。</p><h3 id="六、相关配置命令详解"><a href="#六、相关配置命令详解" class="headerlink" title="六、相关配置命令详解"></a>六、相关配置命令详解</h3><h5 id="1、ip-helper-address"><a href="#1、ip-helper-address" class="headerlink" title="1、ip helper-address"></a>1、ip helper-address</h5><p>命令：ip helper-address <ip-address></ip-address></p><p>功能：指定DHCP服务器的地址。</p><p>命令模式：接口配置模式</p><p>使用指南：ip helper－address的作用就是把广播转化为单播，然后发向指定的DHCP服务器地址，一般在DHCP中继使用。</p><h5 id="2、ip-dhcp-pool"><a href="#2、ip-dhcp-pool" class="headerlink" title="2、ip dhcp pool"></a>2、ip dhcp pool</h5><p>命令：ip dhcp pool <pool-name></pool-name></p><p>功能：建立DHCP地址池。</p><p>命令模式：全局配置模式</p><p>使用指南：pool-name是自己设置的name，应尽量设置一些简单、易记的名字，此命令用于创建DHCP地址池，可配置用于分配的IP地址范围、网关、DNS等参数。</p>]]></content>
      
      
      <categories>
          
          <category> 路由实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Router </tag>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RIP路由实验</title>
      <link href="/2023/09/09/rip-lu-you-shi-yan/"/>
      <url>/2023/09/09/rip-lu-you-shi-yan/</url>
      
        <content type="html"><![CDATA[<h1 id="RIP路由实验"><a href="#RIP路由实验" class="headerlink" title="RIP路由实验"></a>RIP路由实验</h1><h3 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h3><ol><li><p>理解RIP协议的工作过程</p></li><li><p>掌握RIP动态路由的配置</p></li></ol><h3 id="二、应用环境"><a href="#二、应用环境" class="headerlink" title="二、应用环境"></a>二、应用环境</h3><p>当网络拓扑结构十分复杂时，手工配置静态路由工作量大而且容易出现错误，这时就可以使用动态路由协议，动态路由是通过相互连接的路由器之间彼此交换信息，按照一定算法进行优化。这些路由信息在一定时间间隙里会不断更新，以适应网络的不断变化，随时获得最优寻径效果。</p><p>当两台路由器连接时，为了保证每台路由器上所连接的网段可以和另一台路由器上连接的网段互相通信，使用RIP协议可以动态学习路由。</p><h3 id="三、实验设备"><a href="#三、实验设备" class="headerlink" title="三、实验设备"></a>三、实验设备</h3><p>实验拓扑如下，实验设备：2811路由器三台、PC机两台、交叉线三根、串口线一根。</p><p><img src="https://pic.imgdb.cn/item/64fbc7fc661c6c8e54db720d.png" alt="拓扑图"></p><h3 id="四、实验要求"><a href="#四、实验要求" class="headerlink" title="四、实验要求"></a>四、实验要求</h3><p>实验之前：路由器使用2811型号，实验设备需要添加同异步网络模块，打开路由器面板，在Physical选项里选择NM-4A/S或者NM-8A/S,关闭路由器，拖动模块添加并开启路由器。</p><p>未配置RIP路由之前：PC之间不能通信。</p><p>配置RIP路由之后：PC机之间可以互相通信。</p><h3 id="五、实验步骤"><a href="#五、实验步骤" class="headerlink" title="五、实验步骤"></a>五、实验步骤</h3><h4 id="第一步：给PC机设置IP地址（略）"><a href="#第一步：给PC机设置IP地址（略）" class="headerlink" title="第一步：给PC机设置IP地址（略）"></a>第一步：给PC机设置IP地址（略）</h4><h4 id="第二步：给路由器设置IP地址并设置时钟频率"><a href="#第二步：给路由器设置IP地址并设置时钟频率" class="headerlink" title="第二步：给路由器设置IP地址并设置时钟频率"></a>第二步：给路由器设置IP地址并设置时钟频率</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#interface fastEthernet 0/0Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.1.254 255.255.255.0Router(config-if)#exitRouter(config)#interface serial 1/0Router(config-if)#no shutdownRouter(config-if)#clock rate 64000Router(config-if)#ip address 192.168.2.1 255.255.255.0Router(config-if)#exitRouter(config)#路由器B：Router(config)#Router(config)#interface serial 1/0Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.2.2 255.255.255.0Router(config-if)#exitRouter(config)#interface fastEthernet 0/0Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.3.1 255.255.255.0Router(config-if)#exitRouter(config)#路由器C：Router(config)#Router(config)#interface fastEthernet 0/0Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.3.2 255.255.255.0Router(config-if)#exitRouter(config)#interface fastEthernet 0/1Router(config-if)#no shutdownRouter(config-if)#ip address 192.168.4.254 255.255.255.0Router(config-if)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第三步：给路由器配置RIP路由"><a href="#第三步：给路由器配置RIP路由" class="headerlink" title="第三步：给路由器配置RIP路由"></a>第三步：给路由器配置RIP路由</h4><pre class="line-numbers language-router" data-language="router"><code class="language-router">路由器A：Router(config)#Router(config)#router ripRouter(config-router)#version 2Router(config-router)#no auto-summaryRouter(config-router)#network 192.168.1.0Router(config-router)#network 192.168.2.0Router(config-router)#exitRouter(config)#路由器B：Router(config)#Router(config)#router ripRouter(config-router)#version 2Router(config-router)#no auto-summaryRouter(config-router)#network 192.168.2.0Router(config-router)#network 192.168.3.0Router(config-router)#exitRouter(config)#路由器C：Router(config)#Router(config)#router ripRouter(config-router)#version 2Router(config-router)#no auto-summaryRouter(config-router)#network 192.168.3.0Router(config-router)#network 192.168.4.0Router(config-router)#exitRouter(config)#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第四步：测试"><a href="#第四步：测试" class="headerlink" title="第四步：测试"></a>第四步：测试</h4><p>若实验成功，PC机之间可以相互Ping，如PC之间Ping不通，表明实验配置错误，应检查IP地址或线缆是否配置正确、RIP路由是否配置正确。</p>]]></content>
      
      
      <categories>
          
          <category> 路由实验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Router </tag>
            
            <tag> Network </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
